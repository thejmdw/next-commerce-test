{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thejmdw/workspace/websites/next-commerce-test/components/ui/Button/Button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport cn from 'classnames';\nimport React, { forwardRef, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport s from './Button.module.css';\nimport { LoadingDots } from '@components/ui';\nconst Button = /*#__PURE__*/forwardRef((props, buttonRef) => {\n  const {\n    className,\n    variant = 'flat',\n    children,\n    active,\n    width,\n    loading = false,\n    disabled = false,\n    style = {},\n    Component = 'button'\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"variant\", \"children\", \"active\", \"width\", \"loading\", \"disabled\", \"style\", \"Component\"]);\n\n  const ref = useRef(null);\n  const rootClassName = cn(s.root, {\n    [s.slim]: variant === 'slim',\n    [s.loading]: loading,\n    [s.disabled]: disabled\n  }, className);\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({\n    \"aria-pressed\": active,\n    \"data-variant\": variant,\n    ref: mergeRefs([ref, buttonRef]),\n    className: rootClassName,\n    disabled: disabled,\n    style: _objectSpread({\n      width\n    }, style)\n  }, rest), {}, {\n    children: [children, loading && /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"pl-2 m-0 flex\",\n      children: /*#__PURE__*/_jsxDEV(LoadingDots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n});\nexport default Button;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/components/ui/Button/Button.tsx"],"names":["cn","React","forwardRef","useRef","mergeRefs","s","LoadingDots","Button","props","buttonRef","className","variant","children","active","width","loading","disabled","style","Component","rest","ref","rootClassName","root","slim"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,IACEC,UADF,EAIEC,MAJF,QAKO,OALP;AAMA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,CAAP,MAAc,qBAAd;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAcA,MAAMC,MAA6B,gBAAGL,UAAU,CAAC,CAACM,KAAD,EAAQC,SAAR,KAAsB;AACrE,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,OAAO,GAAG,MAFN;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,OAAO,GAAG,KANN;AAOJC,IAAAA,QAAQ,GAAG,KAPP;AAQJC,IAAAA,KAAK,GAAG,EARJ;AASJC,IAAAA,SAAS,GAAG;AATR,MAWFV,KAXJ;AAAA,QAUKW,IAVL,4BAWIX,KAXJ;;AAYA,QAAMY,GAAG,GAAGjB,MAAM,CAAmB,IAAnB,CAAlB;AAEA,QAAMkB,aAAa,GAAGrB,EAAE,CACtBK,CAAC,CAACiB,IADoB,EAEtB;AACE,KAACjB,CAAC,CAACkB,IAAH,GAAUZ,OAAO,KAAK,MADxB;AAEE,KAACN,CAAC,CAACU,OAAH,GAAaA,OAFf;AAGE,KAACV,CAAC,CAACW,QAAH,GAAcA;AAHhB,GAFsB,EAOtBN,SAPsB,CAAxB;AAUA,sBACE,QAAC,SAAD;AACE,oBAAcG,MADhB;AAEE,oBAAcF,OAFhB;AAGE,IAAA,GAAG,EAAEP,SAAS,CAAC,CAACgB,GAAD,EAAMX,SAAN,CAAD,CAHhB;AAIE,IAAA,SAAS,EAAEY,aAJb;AAKE,IAAA,QAAQ,EAAEL,QALZ;AAME,IAAA,KAAK;AACHF,MAAAA;AADG,OAEAG,KAFA;AANP,KAUME,IAVN;AAAA,eAYGP,QAZH,EAaGG,OAAO,iBACN;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,6BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA9C+C,CAAhD;AAgDA,eAAeR,MAAf","sourcesContent":["import cn from 'classnames'\nimport React, {\n  forwardRef,\n  ButtonHTMLAttributes,\n  JSXElementConstructor,\n  useRef,\n} from 'react'\nimport mergeRefs from 'react-merge-refs'\nimport s from './Button.module.css'\nimport { LoadingDots } from '@components/ui'\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  href?: string\n  className?: string\n  variant?: 'flat' | 'slim'\n  active?: boolean\n  type?: 'submit' | 'reset' | 'button'\n  Component?: string | JSXElementConstructor<any>\n  width?: string | number\n  loading?: boolean\n  disabled?: boolean\n}\n\nconst Button: React.FC<ButtonProps> = forwardRef((props, buttonRef) => {\n  const {\n    className,\n    variant = 'flat',\n    children,\n    active,\n    width,\n    loading = false,\n    disabled = false,\n    style = {},\n    Component = 'button',\n    ...rest\n  } = props\n  const ref = useRef<typeof Component>(null)\n\n  const rootClassName = cn(\n    s.root,\n    {\n      [s.slim]: variant === 'slim',\n      [s.loading]: loading,\n      [s.disabled]: disabled,\n    },\n    className\n  )\n\n  return (\n    <Component\n      aria-pressed={active}\n      data-variant={variant}\n      ref={mergeRefs([ref, buttonRef])}\n      className={rootClassName}\n      disabled={disabled}\n      style={{\n        width,\n        ...style,\n      }}\n      {...rest}\n    >\n      {children}\n      {loading && (\n        <i className=\"pl-2 m-0 flex\">\n          <LoadingDots />\n        </i>\n      )}\n    </Component>\n  )\n})\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}