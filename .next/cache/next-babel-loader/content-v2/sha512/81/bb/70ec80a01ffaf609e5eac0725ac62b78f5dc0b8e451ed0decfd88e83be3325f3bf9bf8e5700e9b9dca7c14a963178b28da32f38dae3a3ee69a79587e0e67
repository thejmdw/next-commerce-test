{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useCallback } from 'react';\nimport { CommerceError } from '@commerce/utils/errors';\nimport useSignup from '@commerce/auth/use-signup';\nimport useCustomer from '../customer/use-customer';\nimport { customerCreateMutation } from '../utils/mutations';\nimport { handleAutomaticLogin, throwUserErrors } from '../utils';\nexport default useSignup;\nexport var handler = {\n  fetchOptions: {\n    query: customerCreateMutation\n  },\n  fetcher: function fetcher(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _ref$input, firstName, lastName, email, password, options, fetch, _yield$fetch, customerCreate;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref$input = _ref.input, firstName = _ref$input.firstName, lastName = _ref$input.lastName, email = _ref$input.email, password = _ref$input.password, options = _ref.options, fetch = _ref.fetch;\n\n              if (firstName && lastName && email && password) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new CommerceError({\n                message: 'A first name, last name, email and password are required to signup'\n              });\n\n            case 3:\n              _context.next = 5;\n              return fetch(_objectSpread(_objectSpread({}, options), {}, {\n                variables: {\n                  input: {\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email,\n                    password: password\n                  }\n                }\n              }));\n\n            case 5:\n              _yield$fetch = _context.sent;\n              customerCreate = _yield$fetch.customerCreate;\n              throwUserErrors(customerCreate === null || customerCreate === void 0 ? void 0 : customerCreate.customerUserErrors);\n              _context.next = 10;\n              return handleAutomaticLogin(fetch, {\n                email: email,\n                password: password\n              });\n\n            case 10:\n              return _context.abrupt(\"return\", null);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  useHook: function useHook(_ref2) {\n    var _s = $RefreshSig$();\n\n    var fetch = _ref2.fetch;\n    return _s(function () {\n      _s();\n\n      var _useCustomer = useCustomer(),\n          revalidate = _useCustomer.revalidate;\n\n      return useCallback( /*#__PURE__*/function () {\n        var _signup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(input) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return fetch({\n                    input: input\n                  });\n\n                case 2:\n                  data = _context2.sent;\n                  _context2.next = 5;\n                  return revalidate();\n\n                case 5:\n                  return _context2.abrupt(\"return\", data);\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        function signup(_x) {\n          return _signup.apply(this, arguments);\n        }\n\n        return signup;\n      }(), [fetch, revalidate]);\n    }, \"VbdFNpUpAafu4uJdlR1/SMv+v7U=\", false, function () {\n      return [useCustomer];\n    });\n  }\n};","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/auth/use-signup.tsx"],"names":["useCallback","CommerceError","useSignup","useCustomer","customerCreateMutation","handleAutomaticLogin","throwUserErrors","handler","fetchOptions","query","fetcher","input","firstName","lastName","email","password","options","fetch","message","variables","customerCreate","customerUserErrors","useHook","revalidate","data","signup"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,aAAT,QAA+C,wBAA/C;AACA,OAAOC,SAAP,MAAqC,2BAArC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAOA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,oBAAT,EAA+BC,eAA/B,QAAsD,UAAtD;AAEA,eAAeJ,SAAf;AAEA,OAAO,IAAMK,OAKZ,GAAG;AACFC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAEL;AADK,GADZ;AAIIM,EAAAA,OAJJ,yBAQC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHDC,KAGC,EAHQC,SAGR,cAHQA,SAGR,EAHmBC,QAGnB,cAHmBA,QAGnB,EAH6BC,KAG7B,cAH6BA,KAG7B,EAHoCC,QAGpC,cAHoCA,QAGpC,EAFDC,OAEC,QAFDA,OAEC,EADDC,KACC,QADDA,KACC;;AAAA,kBACKL,SAAS,IAAIC,QAAb,IAAyBC,KAAzB,IAAkCC,QADvC;AAAA;AAAA;AAAA;;AAAA,oBAEO,IAAId,aAAJ,CAAkB;AACtBiB,gBAAAA,OAAO,EACL;AAFoB,eAAlB,CAFP;;AAAA;AAAA;AAAA,qBAQgCD,KAAK,iCAIjCD,OAJiC;AAKpCG,gBAAAA,SAAS,EAAE;AACTR,kBAAAA,KAAK,EAAE;AACLC,oBAAAA,SAAS,EAATA,SADK;AAELC,oBAAAA,QAAQ,EAARA,QAFK;AAGLC,oBAAAA,KAAK,EAALA,KAHK;AAILC,oBAAAA,QAAQ,EAARA;AAJK;AADE;AALyB,iBARrC;;AAAA;AAAA;AAQOK,cAAAA,cARP,gBAQOA,cARP;AAuBDd,cAAAA,eAAe,CAACc,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEC,kBAAjB,CAAf;AAvBC;AAAA,qBAwBKhB,oBAAoB,CAACY,KAAD,EAAQ;AAAEH,gBAAAA,KAAK,EAALA,KAAF;AAASC,gBAAAA,QAAQ,EAARA;AAAT,eAAR,CAxBzB;;AAAA;AAAA,+CA0BM,IA1BN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BF,GAnCC;AAoCFO,EAAAA,OAAO,EAAE;AAAA;;AAAA,QAAGL,KAAH,SAAGA,KAAH;AAAA,cAAe,YAAM;AAAA;;AAAA,yBACLd,WAAW,EADN;AAAA,UACpBoB,UADoB,gBACpBA,UADoB;;AAG5B,aAAOvB,WAAW;AAAA,+EAChB,kBAAsBW,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACqBM,KAAK,CAAC;AAAEN,oBAAAA,KAAK,EAALA;AAAF,mBAAD,CAD1B;;AAAA;AACQa,kBAAAA,IADR;AAAA;AAAA,yBAEQD,UAAU,EAFlB;;AAAA;AAAA,oDAGSC,IAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADgB;;AAAA,iBACDC,MADC;AAAA;AAAA;;AAAA,eACDA,MADC;AAAA,WAMhB,CAACR,KAAD,EAAQM,UAAR,CANgB,CAAlB;AAQD,KAXQ;AAAA,cACgBpB,WADhB;AAAA;AAAA;AApCP,CALG","sourcesContent":["import { useCallback } from 'react'\nimport type { MutationHook } from '@commerce/utils/types'\nimport { CommerceError, ValidationError } from '@commerce/utils/errors'\nimport useSignup, { UseSignup } from '@commerce/auth/use-signup'\nimport useCustomer from '../customer/use-customer'\nimport {\n  CustomerCreateInput,\n  Mutation,\n  MutationCustomerCreateArgs,\n} from '../schema'\n\nimport { customerCreateMutation } from '../utils/mutations'\nimport { handleAutomaticLogin, throwUserErrors } from '../utils'\n\nexport default useSignup as UseSignup<typeof handler>\n\nexport const handler: MutationHook<\n  null,\n  {},\n  CustomerCreateInput,\n  CustomerCreateInput\n> = {\n  fetchOptions: {\n    query: customerCreateMutation,\n  },\n  async fetcher({\n    input: { firstName, lastName, email, password },\n    options,\n    fetch,\n  }) {\n    if (!(firstName && lastName && email && password)) {\n      throw new CommerceError({\n        message:\n          'A first name, last name, email and password are required to signup',\n      })\n    }\n\n    const { customerCreate } = await fetch<\n      Mutation,\n      MutationCustomerCreateArgs\n    >({\n      ...options,\n      variables: {\n        input: {\n          firstName,\n          lastName,\n          email,\n          password,\n        },\n      },\n    })\n\n    throwUserErrors(customerCreate?.customerUserErrors)\n    await handleAutomaticLogin(fetch, { email, password })\n\n    return null\n  },\n  useHook: ({ fetch }) => () => {\n    const { revalidate } = useCustomer()\n\n    return useCallback(\n      async function signup(input) {\n        const data = await fetch({ input })\n        await revalidate()\n        return data\n      },\n      [fetch, revalidate]\n    )\n  },\n}\n"]},"metadata":{},"sourceType":"module"}