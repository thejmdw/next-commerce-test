{"ast":null,"code":"import random from 'lodash.random';\nexport function getRandomPairOfColors() {\n  var colors = ['#37B679', '#DA3C3C', '#3291FF', '#7928CA', '#79FFE1'];\n\n  var getRandomIdx = function getRandomIdx() {\n    return random(0, colors.length - 1);\n  };\n\n  var idx = getRandomIdx();\n  var idx2 = getRandomIdx(); // Has to be a different color\n\n  while (idx2 === idx) {\n    idx2 = getRandomIdx();\n  } // Returns a pair of colors\n\n\n  return [colors[idx], colors[idx2]];\n}\n\nfunction hexToRgb() {\n  var hex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  // @ts-ignore\n  var match = hex.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\n  if (!match) {\n    return [0, 0, 0];\n  }\n\n  var colorString = match[0];\n\n  if (match[0].length === 3) {\n    colorString = colorString.split('').map(function (_char) {\n      return _char + _char;\n    }).join('');\n  }\n\n  var integer = parseInt(colorString, 16);\n  var r = integer >> 16 & 0xff;\n  var g = integer >> 8 & 0xff;\n  var b = integer & 0xff;\n  return [r, g, b];\n}\n\nvar colorMap = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#00FFFF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#0000FF',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#00FFFF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgreen: '#006400',\n  darkgrey: '#A9A9A9',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#FF00FF',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  grey: '#808080',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightgrey: '#D3D3D3',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#778899',\n  lightslategrey: '#778899',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#00FF00',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#FF00FF',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#FF0000',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFFFFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FFFF00',\n  yellowgreen: '#9ACD32'\n};\nexport function isDark() {\n  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  color = color.toLowerCase(); // Equation from http://24ways.org/2010/calculating-color-contrast\n\n  var rgb = colorMap[color] ? hexToRgb(colorMap[color]) : hexToRgb(color);\n  var res = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n  return res < 128;\n}","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/lib/colors.ts"],"names":["random","getRandomPairOfColors","colors","getRandomIdx","length","idx","idx2","hexToRgb","hex","match","toString","colorString","split","map","char","join","integer","parseInt","r","g","b","colorMap","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","isDark","color","toLowerCase","rgb","res"],"mappings":"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","sourcesContent":["import random from 'lodash.random'\n\nexport function getRandomPairOfColors() {\n  const colors = ['#37B679', '#DA3C3C', '#3291FF', '#7928CA', '#79FFE1']\n  const getRandomIdx = () => random(0, colors.length - 1)\n  let idx = getRandomIdx()\n  let idx2 = getRandomIdx()\n\n  // Has to be a different color\n  while (idx2 === idx) {\n    idx2 = getRandomIdx()\n  }\n\n  // Returns a pair of colors\n  return [colors[idx], colors[idx2]]\n}\n\nfunction hexToRgb(hex: string = '') {\n  // @ts-ignore\n  const match = hex.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i)\n\n  if (!match) {\n    return [0, 0, 0]\n  }\n\n  let colorString = match[0]\n\n  if (match[0].length === 3) {\n    colorString = colorString\n      .split('')\n      .map((char: string) => {\n        return char + char\n      })\n      .join('')\n  }\n\n  const integer = parseInt(colorString, 16)\n  const r = (integer >> 16) & 0xff\n  const g = (integer >> 8) & 0xff\n  const b = integer & 0xff\n\n  return [r, g, b]\n}\n\nconst colorMap: Record<string, string> = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#00FFFF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#0000FF',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#00FFFF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgreen: '#006400',\n  darkgrey: '#A9A9A9',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#FF00FF',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  grey: '#808080',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightgrey: '#D3D3D3',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#778899',\n  lightslategrey: '#778899',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#00FF00',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#FF00FF',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#FF0000',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFFFFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FFFF00',\n  yellowgreen: '#9ACD32',\n}\n\nexport function isDark(color: string = ''): boolean {\n  color = color.toLowerCase()\n  // Equation from http://24ways.org/2010/calculating-color-contrast\n  let rgb = colorMap[color] ? hexToRgb(colorMap[color]) : hexToRgb(color)\n  const res = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000\n  return res < 128\n}\n"]},"metadata":{},"sourceType":"module"}