{"ast":null,"code":"// Taken from https://fettblog.eu/typescript-assertion-signatures/\nexport default function defineProperty(obj, prop, val) {\n  Object.defineProperty(obj, prop, val);\n}","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/commerce/utils/define-property.ts"],"names":["defineProperty","obj","prop","val","Object"],"mappings":"AAAA;AA0BA,eAAe,SAASA,cAAT,CAKbC,GALa,EAMbC,IANa,EAObC,GAPa,EAQoC;AACjDC,EAAAA,MAAM,CAACJ,cAAP,CAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,GAAjC;AACD","sourcesContent":["// Taken from https://fettblog.eu/typescript-assertion-signatures/\n\ntype InferValue<Prop extends PropertyKey, Desc> = Desc extends {\n  get(): any\n  value: any\n}\n  ? never\n  : Desc extends { value: infer T }\n  ? Record<Prop, T>\n  : Desc extends { get(): infer T }\n  ? Record<Prop, T>\n  : never\n\ntype DefineProperty<\n  Prop extends PropertyKey,\n  Desc extends PropertyDescriptor\n> = Desc extends { writable: any; set(val: any): any }\n  ? never\n  : Desc extends { writable: any; get(): any }\n  ? never\n  : Desc extends { writable: false }\n  ? Readonly<InferValue<Prop, Desc>>\n  : Desc extends { writable: true }\n  ? InferValue<Prop, Desc>\n  : Readonly<InferValue<Prop, Desc>>\n\nexport default function defineProperty<\n  Obj extends object,\n  Key extends PropertyKey,\n  PDesc extends PropertyDescriptor\n>(\n  obj: Obj,\n  prop: Key,\n  val: PDesc\n): asserts obj is Obj & DefineProperty<Key, PDesc> {\n  Object.defineProperty(obj, prop, val)\n}\n"]},"metadata":{},"sourceType":"module"}