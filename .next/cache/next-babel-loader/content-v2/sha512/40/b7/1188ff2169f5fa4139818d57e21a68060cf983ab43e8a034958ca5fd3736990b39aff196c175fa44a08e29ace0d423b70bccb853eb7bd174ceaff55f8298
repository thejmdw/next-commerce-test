{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport getSortVariables from './get-sort-variables';\nexport const getSearchVariables = ({\n  brandId,\n  search,\n  categoryId,\n  sort\n}) => {\n  let query = '';\n\n  if (search) {\n    query += `product_type:${search} OR title:${search} OR tag:${search}`;\n  }\n\n  if (brandId) {\n    query += `${search ? ' AND ' : ''}vendor:${brandId}`;\n  }\n\n  return _objectSpread({\n    categoryId,\n    query\n  }, getSortVariables(sort, !!categoryId));\n};\nexport default getSearchVariables;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/utils/get-search-variables.ts"],"names":["getSortVariables","getSearchVariables","brandId","search","categoryId","sort","query"],"mappings":";;;;;;AAAA,OAAOA,gBAAP,MAA6B,sBAA7B;AAGA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AACjCC,EAAAA,OADiC;AAEjCC,EAAAA,MAFiC;AAGjCC,EAAAA,UAHiC;AAIjCC,EAAAA;AAJiC,CAAD,KAKP;AACzB,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAIH,MAAJ,EAAY;AACVG,IAAAA,KAAK,IAAK,gBAAeH,MAAO,aAAYA,MAAO,WAAUA,MAAO,EAApE;AACD;;AAED,MAAID,OAAJ,EAAa;AACXI,IAAAA,KAAK,IAAK,GAAEH,MAAM,GAAG,OAAH,GAAa,EAAG,UAASD,OAAQ,EAAnD;AACD;;AAED;AACEE,IAAAA,UADF;AAEEE,IAAAA;AAFF,KAGKN,gBAAgB,CAACK,IAAD,EAAO,CAAC,CAACD,UAAT,CAHrB;AAKD,CArBM;AAuBP,eAAeH,kBAAf","sourcesContent":["import getSortVariables from './get-sort-variables'\nimport type { SearchProductsInput } from '../product/use-search'\n\nexport const getSearchVariables = ({\n  brandId,\n  search,\n  categoryId,\n  sort,\n}: SearchProductsInput) => {\n  let query = ''\n\n  if (search) {\n    query += `product_type:${search} OR title:${search} OR tag:${search}`\n  }\n\n  if (brandId) {\n    query += `${search ? ' AND ' : ''}vendor:${brandId}`\n  }\n\n  return {\n    categoryId,\n    query,\n    ...getSortVariables(sort, !!categoryId),\n  }\n}\n\nexport default getSearchVariables\n"]},"metadata":{},"sourceType":"module"}