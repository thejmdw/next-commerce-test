{"ast":null,"code":"import _slicedToArray from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport function getVariant(product, opts) {\n  var variant = product.variants.find(function (variant) {\n    return Object.entries(opts).every(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return variant.options.find(function (option) {\n        if (option.__typename === 'MultipleChoiceOption' && option.displayName.toLowerCase() === key.toLowerCase()) {\n          return option.values.find(function (v) {\n            return v.label.toLowerCase() === value;\n          });\n        }\n      });\n    });\n  });\n  return variant;\n}","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/components/product/helpers.ts"],"names":["getVariant","product","opts","variant","variants","find","Object","entries","every","key","value","options","option","__typename","displayName","toLowerCase","values","v","label"],"mappings":";AAGA,OAAO,SAASA,UAAT,CAAoBC,OAApB,EAAsCC,IAAtC,EAA6D;AAClE,MAAMC,OAAO,GAAGF,OAAO,CAACG,QAAR,CAAiBC,IAAjB,CAAsB,UAACF,OAAD,EAAa;AACjD,WAAOG,MAAM,CAACC,OAAP,CAAeL,IAAf,EAAqBM,KAArB,CAA2B;AAAA;AAAA,UAAEC,GAAF;AAAA,UAAOC,KAAP;;AAAA,aAChCP,OAAO,CAACQ,OAAR,CAAgBN,IAAhB,CAAqB,UAACO,MAAD,EAAY;AAC/B,YACEA,MAAM,CAACC,UAAP,KAAsB,sBAAtB,IACAD,MAAM,CAACE,WAAP,CAAmBC,WAAnB,OAAqCN,GAAG,CAACM,WAAJ,EAFvC,EAGE;AACA,iBAAOH,MAAM,CAACI,MAAP,CAAcX,IAAd,CAAmB,UAACY,CAAD;AAAA,mBAAOA,CAAC,CAACC,KAAF,CAAQH,WAAR,OAA0BL,KAAjC;AAAA,WAAnB,CAAP;AACD;AACF,OAPD,CADgC;AAAA,KAA3B,CAAP;AAUD,GAXe,CAAhB;AAYA,SAAOP,OAAP;AACD","sourcesContent":["import type { Product } from '@commerce/types'\nexport type SelectedOptions = Record<string, string | null>\n\nexport function getVariant(product: Product, opts: SelectedOptions) {\n  const variant = product.variants.find((variant) => {\n    return Object.entries(opts).every(([key, value]) =>\n      variant.options.find((option) => {\n        if (\n          option.__typename === 'MultipleChoiceOption' &&\n          option.displayName.toLowerCase() === key.toLowerCase()\n        ) {\n          return option.values.find((v) => v.label.toLowerCase() === value)\n        }\n      })\n    )\n  })\n  return variant\n}\n"]},"metadata":{},"sourceType":"module"}