{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport useCommerceCart from '@commerce/cart/use-cart';\nimport { checkoutCreate, checkoutToCart } from '../utils';\nimport getCheckoutQuery from '../utils/queries/get-checkout-query';\nexport default useCommerceCart;\nexport var handler = {\n  fetchOptions: {\n    query: getCheckoutQuery\n  },\n  fetcher: function fetcher(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _checkout;\n\n      var checkoutId, options, fetch, checkout, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              checkoutId = _ref.input.cartId, options = _ref.options, fetch = _ref.fetch;\n\n              if (!checkoutId) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return fetch(_objectSpread(_objectSpread({}, options), {}, {\n                variables: {\n                  checkoutId: checkoutId\n                }\n              }));\n\n            case 4:\n              data = _context.sent;\n              checkout = data.node;\n\n            case 6:\n              if (!((_checkout = checkout) !== null && _checkout !== void 0 && _checkout.completedAt || !checkoutId)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 9;\n              return checkoutCreate(fetch);\n\n            case 9:\n              checkout = _context.sent;\n\n            case 10:\n              return _context.abrupt(\"return\", checkoutToCart({\n                checkout: checkout\n              }));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  useHook: function useHook(_ref2) {\n    var _s = $RefreshSig$();\n\n    var useData = _ref2.useData;\n    return _s(function (input) {\n      _s();\n\n      var response = useData({\n        swrOptions: _objectSpread({\n          revalidateOnFocus: false\n        }, input === null || input === void 0 ? void 0 : input.swrOptions)\n      });\n      return useMemo(function () {\n        return Object.create(response, {\n          isEmpty: {\n            get: function get() {\n              var _response$data$lineIt, _response$data;\n\n              return ((_response$data$lineIt = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.lineItems.length) !== null && _response$data$lineIt !== void 0 ? _response$data$lineIt : 0) <= 0;\n            },\n            enumerable: true\n          }\n        });\n      }, [response]);\n    }, \"iEKDrU2e2N3iBHbVnMLaSI8XxJ0=\", false, function () {\n      return [useData];\n    });\n  }\n};","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/cart/use-cart.tsx"],"names":["useMemo","useCommerceCart","checkoutCreate","checkoutToCart","getCheckoutQuery","handler","fetchOptions","query","fetcher","checkoutId","input","cartId","options","fetch","variables","data","checkout","node","completedAt","useHook","useData","response","swrOptions","revalidateOnFocus","Object","create","isEmpty","get","lineItems","length","enumerable"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,eAAP,MAGO,yBAHP;AAOA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,UAA/C;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AAEA,eAAeH,eAAf;AAEA,OAAO,IAAMI,OAKZ,GAAG;AACFC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAEH;AADK,GADZ;AAIII,EAAAA,OAJJ,yBAI+D;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhCC,cAAAA,UAAgC,QAAjDC,KAAiD,CAAxCC,MAAwC,EAAlBC,OAAkB,QAAlBA,OAAkB,EAATC,KAAS,QAATA,KAAS;;AAAA,mBAG3DJ,UAH2D;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAI1CI,KAAK,iCACnBD,OADmB;AAEtBE,gBAAAA,SAAS,EAAE;AACTL,kBAAAA,UAAU,EAAEA;AADH;AAFW,iBAJqC;;AAAA;AAIvDM,cAAAA,IAJuD;AAU7DC,cAAAA,QAAQ,GAAGD,IAAI,CAACE,IAAhB;;AAV6D;AAAA,oBAa3D,aAAAD,QAAQ,UAAR,sCAAUE,WAAV,IAAyB,CAACT,UAbiC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAc5CP,cAAc,CAACW,KAAD,CAd8B;;AAAA;AAc7DG,cAAAA,QAd6D;;AAAA;AAAA,+CAiBxDb,cAAc,CAAC;AAAEa,gBAAAA,QAAQ,EAARA;AAAF,eAAD,CAjB0C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBhE,GAtBC;AAuBFG,EAAAA,OAAO,EAAE;AAAA;;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,cAAiB,UAACV,KAAD,EAAW;AAAA;;AACnC,UAAMW,QAAQ,GAAGD,OAAO,CAAC;AACvBE,QAAAA,UAAU;AAAIC,UAAAA,iBAAiB,EAAE;AAAvB,WAAiCb,KAAjC,aAAiCA,KAAjC,uBAAiCA,KAAK,CAAEY,UAAxC;AADa,OAAD,CAAxB;AAGA,aAAOtB,OAAO,CACZ;AAAA,eACEwB,MAAM,CAACC,MAAP,CAAcJ,QAAd,EAAwB;AACtBK,UAAAA,OAAO,EAAE;AACPC,YAAAA,GADO,iBACD;AAAA;;AACJ,qBAAO,4CAACN,QAAQ,CAACN,IAAV,mDAAC,eAAea,SAAf,CAAyBC,MAA1B,yEAAoC,CAApC,KAA0C,CAAjD;AACD,aAHM;AAIPC,YAAAA,UAAU,EAAE;AAJL;AADa,SAAxB,CADF;AAAA,OADY,EAUZ,CAACT,QAAD,CAVY,CAAd;AAYD,KAhBQ;AAAA,cACUD,OADV;AAAA;AAAA;AAvBP,CALG","sourcesContent":["import { useMemo } from 'react'\nimport useCommerceCart, {\n  FetchCartInput,\n  UseCart,\n} from '@commerce/cart/use-cart'\n\nimport { Cart } from '../types'\nimport { SWRHook } from '@commerce/utils/types'\nimport { checkoutCreate, checkoutToCart } from '../utils'\nimport getCheckoutQuery from '../utils/queries/get-checkout-query'\n\nexport default useCommerceCart as UseCart<typeof handler>\n\nexport const handler: SWRHook<\n  Cart | null,\n  {},\n  FetchCartInput,\n  { isEmpty?: boolean }\n> = {\n  fetchOptions: {\n    query: getCheckoutQuery,\n  },\n  async fetcher({ input: { cartId: checkoutId }, options, fetch }) {\n    let checkout\n\n    if (checkoutId) {\n      const data = await fetch({\n        ...options,\n        variables: {\n          checkoutId: checkoutId,\n        },\n      })\n      checkout = data.node\n    }\n\n    if (checkout?.completedAt || !checkoutId) {\n      checkout = await checkoutCreate(fetch)\n    }\n\n    return checkoutToCart({ checkout })\n  },\n  useHook: ({ useData }) => (input) => {\n    const response = useData({\n      swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n    })\n    return useMemo(\n      () =>\n        Object.create(response, {\n          isEmpty: {\n            get() {\n              return (response.data?.lineItems.length ?? 0) <= 0\n            },\n            enumerable: true,\n          },\n        }),\n      [response]\n    )\n  },\n}\n"]},"metadata":{},"sourceType":"module"}