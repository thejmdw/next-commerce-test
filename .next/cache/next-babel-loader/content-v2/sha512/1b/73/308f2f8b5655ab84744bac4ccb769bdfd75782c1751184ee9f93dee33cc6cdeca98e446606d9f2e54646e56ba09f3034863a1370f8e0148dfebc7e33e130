{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useCallback } from 'react';\nimport useLogout from '@commerce/auth/use-logout';\nimport useCustomer from '../customer/use-customer';\nimport customerAccessTokenDeleteMutation from '../utils/mutations/customer-access-token-delete';\nimport { getCustomerToken, setCustomerToken } from '../utils/customer-token';\nexport default useLogout;\nexport const handler = {\n  fetchOptions: {\n    query: customerAccessTokenDeleteMutation\n  },\n\n  async fetcher({\n    options,\n    fetch\n  }) {\n    await fetch(_objectSpread(_objectSpread({}, options), {}, {\n      variables: {\n        customerAccessToken: getCustomerToken()\n      }\n    }));\n    setCustomerToken(null);\n    return null;\n  },\n\n  useHook: ({\n    fetch\n  }) => () => {\n    const {\n      mutate\n    } = useCustomer();\n    return useCallback(async function logout() {\n      const data = await fetch();\n      await mutate(null, false);\n      return data;\n    }, [fetch, mutate]);\n  }\n};","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/auth/use-logout.tsx"],"names":["useCallback","useLogout","useCustomer","customerAccessTokenDeleteMutation","getCustomerToken","setCustomerToken","handler","fetchOptions","query","fetcher","options","fetch","variables","customerAccessToken","useHook","mutate","logout","data"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAOC,SAAP,MAAqC,2BAArC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,iCAAP,MAA8C,iDAA9C;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,yBAAnD;AAEA,eAAeJ,SAAf;AAEA,OAAO,MAAMK,OAA2B,GAAG;AACzCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAEL;AADK,GAD2B;;AAIzC,QAAMM,OAAN,CAAc;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAd,EAAkC;AAChC,UAAMA,KAAK,iCACND,OADM;AAETE,MAAAA,SAAS,EAAE;AACTC,QAAAA,mBAAmB,EAAET,gBAAgB;AAD5B;AAFF,OAAX;AAMAC,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,WAAO,IAAP;AACD,GAbwC;;AAczCS,EAAAA,OAAO,EAAE,CAAC;AAAEH,IAAAA;AAAF,GAAD,KAAe,MAAM;AAC5B,UAAM;AAAEI,MAAAA;AAAF,QAAab,WAAW,EAA9B;AAEA,WAAOF,WAAW,CAChB,eAAegB,MAAf,GAAwB;AACtB,YAAMC,IAAI,GAAG,MAAMN,KAAK,EAAxB;AACA,YAAMI,MAAM,CAAC,IAAD,EAAO,KAAP,CAAZ;AACA,aAAOE,IAAP;AACD,KALe,EAMhB,CAACN,KAAD,EAAQI,MAAR,CANgB,CAAlB;AAQD;AAzBwC,CAApC","sourcesContent":["import { useCallback } from 'react'\nimport type { MutationHook } from '@commerce/utils/types'\nimport useLogout, { UseLogout } from '@commerce/auth/use-logout'\nimport useCustomer from '../customer/use-customer'\nimport customerAccessTokenDeleteMutation from '../utils/mutations/customer-access-token-delete'\nimport { getCustomerToken, setCustomerToken } from '../utils/customer-token'\n\nexport default useLogout as UseLogout<typeof handler>\n\nexport const handler: MutationHook<null> = {\n  fetchOptions: {\n    query: customerAccessTokenDeleteMutation,\n  },\n  async fetcher({ options, fetch }) {\n    await fetch({\n      ...options,\n      variables: {\n        customerAccessToken: getCustomerToken(),\n      },\n    })\n    setCustomerToken(null)\n    return null\n  },\n  useHook: ({ fetch }) => () => {\n    const { mutate } = useCustomer()\n\n    return useCallback(\n      async function logout() {\n        const data = await fetch()\n        await mutate(null, false)\n        return data\n      },\n      [fetch, mutate]\n    )\n  },\n}\n"]},"metadata":{},"sourceType":"module"}