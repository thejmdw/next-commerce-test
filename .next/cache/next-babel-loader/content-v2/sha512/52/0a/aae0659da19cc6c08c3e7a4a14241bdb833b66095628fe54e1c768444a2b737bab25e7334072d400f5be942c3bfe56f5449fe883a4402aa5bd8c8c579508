{"ast":null,"code":"import _defineProperty from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var SWRFetcher = function SWRFetcher(_ref) {\n  var options = _ref.options,\n      fetch = _ref.fetch;\n  return fetch(options);\n};\n_c = SWRFetcher;\nexport var mutationFetcher = function mutationFetcher(_ref2) {\n  var input = _ref2.input,\n      options = _ref2.options,\n      fetch = _ref2.fetch;\n  return fetch(_objectSpread(_objectSpread({}, options), {}, {\n    body: input\n  }));\n};\nexport default SWRFetcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"SWRFetcher\");","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/commerce/utils/default-fetcher.ts"],"names":["SWRFetcher","options","fetch","mutationFetcher","input","body"],"mappings":";;;;;;AAEA,OAAO,IAAMA,UAAmC,GAAG,SAAtCA,UAAsC;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,KAAZ,QAAYA,KAAZ;AAAA,SACjDA,KAAK,CAACD,OAAD,CAD4C;AAAA,CAA5C;KAAMD,U;AAGb,OAAO,IAAMG,eAAwC,GAAG,SAA3CA,eAA2C;AAAA,MACtDC,KADsD,SACtDA,KADsD;AAAA,MAEtDH,OAFsD,SAEtDA,OAFsD;AAAA,MAGtDC,KAHsD,SAGtDA,KAHsD;AAAA,SAIlDA,KAAK,iCAAMD,OAAN;AAAeI,IAAAA,IAAI,EAAED;AAArB,KAJ6C;AAAA,CAAjD;AAMP,eAAeJ,UAAf","sourcesContent":["import type { HookFetcherFn } from './types'\n\nexport const SWRFetcher: HookFetcherFn<any, any> = ({ options, fetch }) =>\n  fetch(options)\n\nexport const mutationFetcher: HookFetcherFn<any, any> = ({\n  input,\n  options,\n  fetch,\n}) => fetch({ ...options, body: input })\n\nexport default SWRFetcher\n"]},"metadata":{},"sourceType":"module"}