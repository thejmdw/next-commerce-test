{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst money = ({\n  amount,\n  currencyCode\n}) => {\n  return {\n    value: +amount,\n    currencyCode\n  };\n};\n\nconst normalizeProductOption = ({\n  id,\n  name: displayName,\n  values\n}) => {\n  return {\n    __typename: 'MultipleChoiceOption',\n    id,\n    displayName,\n    values: values.map(value => {\n      let output = {\n        label: value\n      };\n\n      if (displayName.match(/colou?r/gi)) {\n        output = _objectSpread(_objectSpread({}, output), {}, {\n          hexColors: [value]\n        });\n      }\n\n      return output;\n    })\n  };\n};\n\nconst normalizeProductImages = ({\n  edges\n}) => edges === null || edges === void 0 ? void 0 : edges.map((_ref) => {\n  let {\n    node: {\n      originalSrc: url\n    }\n  } = _ref,\n      rest = _objectWithoutProperties(_ref.node, [\"originalSrc\"]);\n\n  return _objectSpread({\n    url\n  }, rest);\n});\n\nconst normalizeProductVariants = ({\n  edges\n}) => {\n  return edges === null || edges === void 0 ? void 0 : edges.map(({\n    node: {\n      id,\n      selectedOptions,\n      sku,\n      title,\n      priceV2,\n      compareAtPriceV2\n    }\n  }) => {\n    return {\n      id,\n      name: title,\n      sku: sku !== null && sku !== void 0 ? sku : id,\n      price: +priceV2.amount,\n      listPrice: +(compareAtPriceV2 === null || compareAtPriceV2 === void 0 ? void 0 : compareAtPriceV2.amount),\n      requiresShipping: true,\n      options: selectedOptions.map(({\n        name,\n        value\n      }) => {\n        const options = normalizeProductOption({\n          id,\n          name,\n          values: [value]\n        });\n        return options;\n      })\n    };\n  });\n};\n\nexport function normalizeProduct(productNode) {\n  const {\n    id,\n    title: name,\n    vendor,\n    images,\n    variants,\n    description,\n    handle,\n    priceRange,\n    options\n  } = productNode,\n        rest = _objectWithoutProperties(productNode, [\"id\", \"title\", \"vendor\", \"images\", \"variants\", \"description\", \"handle\", \"priceRange\", \"options\"]);\n\n  const product = _objectSpread({\n    id,\n    name,\n    vendor,\n    description,\n    path: `/${handle}`,\n    slug: handle === null || handle === void 0 ? void 0 : handle.replace(/^\\/+|\\/+$/g, ''),\n    price: money(priceRange === null || priceRange === void 0 ? void 0 : priceRange.minVariantPrice),\n    images: normalizeProductImages(images),\n    variants: variants ? normalizeProductVariants(variants) : [],\n    options: options ? options.filter(o => o.name !== 'Title') // By default Shopify adds a 'Title' name when there's only one option. We don't need it. https://community.shopify.com/c/Shopify-APIs-SDKs/Adding-new-product-variant-is-automatically-adding-quot-Default/td-p/358095\n    .map(o => normalizeProductOption(o)) : []\n  }, rest);\n\n  return product;\n}\nexport function normalizeCart(checkout) {\n  var _checkout$totalPriceV, _checkout$lineItems, _checkout$subtotalPri, _checkout$subtotalPri2, _checkout$totalPriceV2;\n\n  return {\n    id: checkout.id,\n    customerId: '',\n    email: '',\n    createdAt: checkout.createdAt,\n    currency: {\n      code: (_checkout$totalPriceV = checkout.totalPriceV2) === null || _checkout$totalPriceV === void 0 ? void 0 : _checkout$totalPriceV.currencyCode\n    },\n    taxesIncluded: checkout.taxesIncluded,\n    lineItems: (_checkout$lineItems = checkout.lineItems) === null || _checkout$lineItems === void 0 ? void 0 : _checkout$lineItems.edges.map(normalizeLineItem),\n    lineItemsSubtotalPrice: +((_checkout$subtotalPri = checkout.subtotalPriceV2) === null || _checkout$subtotalPri === void 0 ? void 0 : _checkout$subtotalPri.amount),\n    subtotalPrice: +((_checkout$subtotalPri2 = checkout.subtotalPriceV2) === null || _checkout$subtotalPri2 === void 0 ? void 0 : _checkout$subtotalPri2.amount),\n    totalPrice: (_checkout$totalPriceV2 = checkout.totalPriceV2) === null || _checkout$totalPriceV2 === void 0 ? void 0 : _checkout$totalPriceV2.amount,\n    discounts: []\n  };\n}\n\nfunction normalizeLineItem(_ref2) {\n  var _variant$sku, _variant$image$origin, _variant$image, _variant$requiresShip, _variant$priceV, _variant$compareAtPri, _variant$product;\n\n  let {\n    node: {\n      id,\n      title,\n      variant,\n      quantity\n    }\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2.node, [\"id\", \"title\", \"variant\", \"quantity\"]);\n\n  return {\n    id,\n    variantId: String(variant === null || variant === void 0 ? void 0 : variant.id),\n    productId: String(variant === null || variant === void 0 ? void 0 : variant.id),\n    name: `${title}`,\n    quantity,\n    variant: {\n      id: String(variant === null || variant === void 0 ? void 0 : variant.id),\n      sku: (_variant$sku = variant === null || variant === void 0 ? void 0 : variant.sku) !== null && _variant$sku !== void 0 ? _variant$sku : '',\n      name: variant === null || variant === void 0 ? void 0 : variant.title,\n      image: {\n        url: (_variant$image$origin = variant === null || variant === void 0 ? void 0 : (_variant$image = variant.image) === null || _variant$image === void 0 ? void 0 : _variant$image.originalSrc) !== null && _variant$image$origin !== void 0 ? _variant$image$origin : '/product-img-placeholder.svg'\n      },\n      requiresShipping: (_variant$requiresShip = variant === null || variant === void 0 ? void 0 : variant.requiresShipping) !== null && _variant$requiresShip !== void 0 ? _variant$requiresShip : false,\n      price: variant === null || variant === void 0 ? void 0 : (_variant$priceV = variant.priceV2) === null || _variant$priceV === void 0 ? void 0 : _variant$priceV.amount,\n      listPrice: variant === null || variant === void 0 ? void 0 : (_variant$compareAtPri = variant.compareAtPriceV2) === null || _variant$compareAtPri === void 0 ? void 0 : _variant$compareAtPri.amount\n    },\n    path: String(variant === null || variant === void 0 ? void 0 : (_variant$product = variant.product) === null || _variant$product === void 0 ? void 0 : _variant$product.handle),\n    discounts: [],\n    options: // By default Shopify adds a default variant with default names, we're removing it. https://community.shopify.com/c/Shopify-APIs-SDKs/Adding-new-product-variant-is-automatically-adding-quot-Default/td-p/358095\n    (variant === null || variant === void 0 ? void 0 : variant.title) == 'Default Title' ? [] : [{\n      value: variant === null || variant === void 0 ? void 0 : variant.title\n    }]\n  };\n}","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/utils/normalize.ts"],"names":["money","amount","currencyCode","value","normalizeProductOption","id","name","displayName","values","__typename","map","output","label","match","hexColors","normalizeProductImages","edges","node","originalSrc","url","rest","normalizeProductVariants","selectedOptions","sku","title","priceV2","compareAtPriceV2","price","listPrice","requiresShipping","options","normalizeProduct","productNode","vendor","images","variants","description","handle","priceRange","product","path","slug","replace","minVariantPrice","filter","o","normalizeCart","checkout","customerId","email","createdAt","currency","code","totalPriceV2","taxesIncluded","lineItems","normalizeLineItem","lineItemsSubtotalPrice","subtotalPriceV2","subtotalPrice","totalPrice","discounts","variant","quantity","variantId","String","productId","image"],"mappings":"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","sourcesContent":["import { Product } from '@commerce/types'\n\nimport {\n  Product as ShopifyProduct,\n  Checkout,\n  CheckoutLineItemEdge,\n  SelectedOption,\n  ImageConnection,\n  ProductVariantConnection,\n  MoneyV2,\n  ProductOption,\n} from '../schema'\n\nimport type { Cart, LineItem } from '../types'\n\nconst money = ({ amount, currencyCode }: MoneyV2) => {\n  return {\n    value: +amount,\n    currencyCode,\n  }\n}\n\nconst normalizeProductOption = ({\n  id,\n  name: displayName,\n  values,\n}: ProductOption) => {\n  return {\n    __typename: 'MultipleChoiceOption',\n    id,\n    displayName,\n    values: values.map((value) => {\n      let output: any = {\n        label: value,\n      }\n      if (displayName.match(/colou?r/gi)) {\n        output = {\n          ...output,\n          hexColors: [value],\n        }\n      }\n      return output\n    }),\n  }\n}\n\nconst normalizeProductImages = ({ edges }: ImageConnection) =>\n  edges?.map(({ node: { originalSrc: url, ...rest } }) => ({\n    url,\n    ...rest,\n  }))\n\nconst normalizeProductVariants = ({ edges }: ProductVariantConnection) => {\n  return edges?.map(\n    ({\n      node: { id, selectedOptions, sku, title, priceV2, compareAtPriceV2 },\n    }) => {\n      return {\n        id,\n        name: title,\n        sku: sku ?? id,\n        price: +priceV2.amount,\n        listPrice: +compareAtPriceV2?.amount,\n        requiresShipping: true,\n        options: selectedOptions.map(({ name, value }: SelectedOption) => {\n          const options = normalizeProductOption({\n            id,\n            name,\n            values: [value],\n          })\n          return options\n        }),\n      }\n    }\n  )\n}\n\nexport function normalizeProduct(productNode: ShopifyProduct): Product {\n  const {\n    id,\n    title: name,\n    vendor,\n    images,\n    variants,\n    description,\n    handle,\n    priceRange,\n    options,\n    ...rest\n  } = productNode\n\n  const product = {\n    id,\n    name,\n    vendor,\n    description,\n    path: `/${handle}`,\n    slug: handle?.replace(/^\\/+|\\/+$/g, ''),\n    price: money(priceRange?.minVariantPrice),\n    images: normalizeProductImages(images),\n    variants: variants ? normalizeProductVariants(variants) : [],\n    options: options\n      ? options\n          .filter((o) => o.name !== 'Title') // By default Shopify adds a 'Title' name when there's only one option. We don't need it. https://community.shopify.com/c/Shopify-APIs-SDKs/Adding-new-product-variant-is-automatically-adding-quot-Default/td-p/358095\n          .map((o) => normalizeProductOption(o))\n      : [],\n    ...rest,\n  }\n\n  return product\n}\n\nexport function normalizeCart(checkout: Checkout): Cart {\n  return {\n    id: checkout.id,\n    customerId: '',\n    email: '',\n    createdAt: checkout.createdAt,\n    currency: {\n      code: checkout.totalPriceV2?.currencyCode,\n    },\n    taxesIncluded: checkout.taxesIncluded,\n    lineItems: checkout.lineItems?.edges.map(normalizeLineItem),\n    lineItemsSubtotalPrice: +checkout.subtotalPriceV2?.amount,\n    subtotalPrice: +checkout.subtotalPriceV2?.amount,\n    totalPrice: checkout.totalPriceV2?.amount,\n    discounts: [],\n  }\n}\n\nfunction normalizeLineItem({\n  node: { id, title, variant, quantity, ...rest },\n}: CheckoutLineItemEdge): LineItem {\n  return {\n    id,\n    variantId: String(variant?.id),\n    productId: String(variant?.id),\n    name: `${title}`,\n    quantity,\n    variant: {\n      id: String(variant?.id),\n      sku: variant?.sku ?? '',\n      name: variant?.title!,\n      image: {\n        url: variant?.image?.originalSrc ?? '/product-img-placeholder.svg',\n      },\n      requiresShipping: variant?.requiresShipping ?? false,\n      price: variant?.priceV2?.amount,\n      listPrice: variant?.compareAtPriceV2?.amount,\n    },\n    path: String(variant?.product?.handle),\n    discounts: [],\n    options:\n      // By default Shopify adds a default variant with default names, we're removing it. https://community.shopify.com/c/Shopify-APIs-SDKs/Adding-new-product-variant-is-automatically-adding-quot-Default/td-p/358095\n      variant?.title == 'Default Title'\n        ? []\n        : [\n            {\n              value: variant?.title,\n            },\n          ],\n  }\n}\n"]},"metadata":{},"sourceType":"module"}