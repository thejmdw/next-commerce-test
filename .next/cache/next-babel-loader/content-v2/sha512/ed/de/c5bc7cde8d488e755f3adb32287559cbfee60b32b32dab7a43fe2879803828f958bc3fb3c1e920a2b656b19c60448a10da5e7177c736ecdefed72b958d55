{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport throwUserErrors from './throw-user-errors';\nimport { customerActivateByUrlMutation } from './mutations';\n\nvar handleAccountActivation = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fetch, input) {\n    var _yield$fetch, customerActivateByUrl;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch({\n              query: customerActivateByUrlMutation,\n              variables: {\n                input: input\n              }\n            });\n\n          case 3:\n            _yield$fetch = _context.sent;\n            customerActivateByUrl = _yield$fetch.customerActivateByUrl;\n            throwUserErrors(customerActivateByUrl === null || customerActivateByUrl === void 0 ? void 0 : customerActivateByUrl.customerUserErrors);\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function handleAccountActivation(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default handleAccountActivation;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/utils/handle-account-activation.ts"],"names":["throwUserErrors","customerActivateByUrlMutation","handleAccountActivation","fetch","input","query","variables","customerActivateByUrl","customerUserErrors"],"mappings":";;AACA,OAAOA,eAAP,MAA4B,qBAA5B;AAOA,SAASC,6BAAT,QAA8C,aAA9C;;AAEA,IAAMC,uBAAuB;AAAA,sEAAG,iBAC9BC,KAD8B,EAE9BC,KAF8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKYD,KAAK,CAG3C;AACAE,cAAAA,KAAK,EAAEJ,6BADP;AAEAK,cAAAA,SAAS,EAAE;AACTF,gBAAAA,KAAK,EAALA;AADS;AAFX,aAH2C,CALjB;;AAAA;AAAA;AAKpBG,YAAAA,qBALoB,gBAKpBA,qBALoB;AAe5BP,YAAAA,eAAe,CAACO,qBAAD,aAACA,qBAAD,uBAACA,qBAAqB,CAAEC,kBAAxB,CAAf;AAf4B;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAvBN,uBAAuB;AAAA;AAAA;AAAA,GAA7B;;AAmBA,eAAeA,uBAAf","sourcesContent":["import { FetcherOptions } from '@commerce/utils/types'\nimport throwUserErrors from './throw-user-errors'\n\nimport {\n  MutationCustomerActivateArgs,\n  MutationCustomerActivateByUrlArgs,\n} from '../schema'\nimport { Mutation } from '../schema'\nimport { customerActivateByUrlMutation } from './mutations'\n\nconst handleAccountActivation = async (\n  fetch: <T = any, B = Body>(options: FetcherOptions<B>) => Promise<T>,\n  input: MutationCustomerActivateByUrlArgs\n) => {\n  try {\n    const { customerActivateByUrl } = await fetch<\n      Mutation,\n      MutationCustomerActivateArgs\n    >({\n      query: customerActivateByUrlMutation,\n      variables: {\n        input,\n      },\n    })\n\n    throwUserErrors(customerActivateByUrl?.customerUserErrors)\n  } catch (error) {}\n}\n\nexport default handleAccountActivation\n"]},"metadata":{},"sourceType":"module"}