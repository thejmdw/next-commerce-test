{"ast":null,"code":"import _defineProperty from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport useSearch from '@commerce/product/use-search';\nimport { getAllProductsQuery, getCollectionProductsQuery, getSearchVariables, normalizeProduct } from '../utils';\nexport default useSearch;\nexport var handler = {\n  fetchOptions: {\n    query: getAllProductsQuery\n  },\n  fetcher: function fetcher(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var input, options, fetch, categoryId, brandId, data, edges, _data$node$products$e, _data$node, _data$node$products, _data$products$edges, _data$products;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              input = _ref.input, options = _ref.options, fetch = _ref.fetch;\n              categoryId = input.categoryId, brandId = input.brandId;\n              _context.next = 4;\n              return fetch({\n                query: categoryId ? getCollectionProductsQuery : options.query,\n                method: options === null || options === void 0 ? void 0 : options.method,\n                variables: getSearchVariables(input)\n              });\n\n            case 4:\n              data = _context.sent;\n\n              if (categoryId) {\n                edges = (_data$node$products$e = (_data$node = data.node) === null || _data$node === void 0 ? void 0 : (_data$node$products = _data$node.products) === null || _data$node$products === void 0 ? void 0 : _data$node$products.edges) !== null && _data$node$products$e !== void 0 ? _data$node$products$e : [];\n\n                if (brandId) {\n                  edges = edges.filter(function (_ref2) {\n                    var vendor = _ref2.node.vendor;\n                    return vendor.replace(/\\s+/g, '-').toLowerCase() === brandId;\n                  });\n                }\n              } else {\n                edges = (_data$products$edges = (_data$products = data.products) === null || _data$products === void 0 ? void 0 : _data$products.edges) !== null && _data$products$edges !== void 0 ? _data$products$edges : [];\n              }\n\n              return _context.abrupt(\"return\", {\n                products: edges.map(function (_ref3) {\n                  var node = _ref3.node;\n                  return normalizeProduct(node);\n                }),\n                found: !!edges.length\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  useHook: function useHook(_ref4) {\n    var _s = $RefreshSig$();\n\n    var useData = _ref4.useData;\n    return _s(function () {\n      _s();\n\n      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return useData({\n        input: [['search', input.search], ['categoryId', input.categoryId], ['brandId', input.brandId], ['sort', input.sort]],\n        swrOptions: _objectSpread({\n          revalidateOnFocus: false\n        }, input.swrOptions)\n      });\n    }, \"7nuxJLEyQO4rIsd+AJDJHMkCeg4=\", false, function () {\n      return [useData];\n    });\n  }\n};","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/product/use-search.tsx"],"names":["useSearch","getAllProductsQuery","getCollectionProductsQuery","getSearchVariables","normalizeProduct","handler","fetchOptions","query","fetcher","input","options","fetch","categoryId","brandId","method","variables","data","edges","node","products","filter","vendor","replace","toLowerCase","map","found","length","useHook","useData","search","sort","swrOptions","revalidateOnFocus"],"mappings":";;;;;;;;AACA,OAAOA,SAAP,MAAqC,8BAArC;AAGA,SACEC,mBADF,EAEEC,0BAFF,EAGEC,kBAHF,EAIEC,gBAJF,QAKO,UALP;AASA,eAAeJ,SAAf;AAcA,OAAO,IAAMK,OAIZ,GAAG;AACFC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAEN;AADK,GADZ;AAIIO,EAAAA,OAJJ,yBAIuC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAzBC,cAAAA,KAAyB,QAAzBA,KAAyB,EAAlBC,OAAkB,QAAlBA,OAAkB,EAATC,KAAS,QAATA,KAAS;AAC/BC,cAAAA,UAD+B,GACPH,KADO,CAC/BG,UAD+B,EACnBC,OADmB,GACPJ,KADO,CACnBI,OADmB;AAAA;AAAA,qBAGpBF,KAAK,CAAC;AACvBJ,gBAAAA,KAAK,EAAEK,UAAU,GAAGV,0BAAH,GAAgCQ,OAAO,CAACH,KADlC;AAEvBO,gBAAAA,MAAM,EAAEJ,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEI,MAFM;AAGvBC,gBAAAA,SAAS,EAAEZ,kBAAkB,CAACM,KAAD;AAHN,eAAD,CAHe;;AAAA;AAGjCO,cAAAA,IAHiC;;AAWvC,kBAAIJ,UAAJ,EAAgB;AACdK,gBAAAA,KAAK,0CAAGD,IAAI,CAACE,IAAR,sEAAG,WAAWC,QAAd,wDAAG,oBAAqBF,KAAxB,yEAAiC,EAAtC;;AACA,oBAAIJ,OAAJ,EAAa;AACXI,kBAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CACN;AAAA,wBAAWC,MAAX,SAAGH,IAAH,CAAWG,MAAX;AAAA,2BACEA,MAAM,CAACC,OAAP,CAAe,MAAf,EAAuB,GAAvB,EAA4BC,WAA5B,OAA8CV,OADhD;AAAA,mBADM,CAAR;AAID;AACF,eARD,MAQO;AACLI,gBAAAA,KAAK,6CAAGD,IAAI,CAACG,QAAR,mDAAG,eAAeF,KAAlB,uEAA2B,EAAhC;AACD;;AArBsC,+CAuBhC;AACLE,gBAAAA,QAAQ,EAAEF,KAAK,CAACO,GAAN,CAAU;AAAA,sBAAGN,IAAH,SAAGA,IAAH;AAAA,yBAA2Bd,gBAAgB,CAACc,IAAD,CAA3C;AAAA,iBAAV,CADL;AAELO,gBAAAA,KAAK,EAAE,CAAC,CAACR,KAAK,CAACS;AAFV,eAvBgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BxC,GA/BC;AAgCFC,EAAAA,OAAO,EAAE;AAAA;;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,cAAiB,YAAgB;AAAA;;AAAA,UAAfnB,KAAe,uEAAP,EAAO;AACxC,aAAOmB,OAAO,CAAC;AACbnB,QAAAA,KAAK,EAAE,CACL,CAAC,QAAD,EAAWA,KAAK,CAACoB,MAAjB,CADK,EAEL,CAAC,YAAD,EAAepB,KAAK,CAACG,UAArB,CAFK,EAGL,CAAC,SAAD,EAAYH,KAAK,CAACI,OAAlB,CAHK,EAIL,CAAC,MAAD,EAASJ,KAAK,CAACqB,IAAf,CAJK,CADM;AAObC,QAAAA,UAAU;AACRC,UAAAA,iBAAiB,EAAE;AADX,WAELvB,KAAK,CAACsB,UAFD;AAPG,OAAD,CAAd;AAYD,KAbQ;AAAA,cACAH,OADA;AAAA;AAAA;AAhCP,CAJG","sourcesContent":["import { SWRHook } from '@commerce/utils/types'\nimport useSearch, { UseSearch } from '@commerce/product/use-search'\n\nimport { ProductEdge } from '../schema'\nimport {\n  getAllProductsQuery,\n  getCollectionProductsQuery,\n  getSearchVariables,\n  normalizeProduct,\n} from '../utils'\n\nimport { Product } from '@commerce/types'\n\nexport default useSearch as UseSearch<typeof handler>\n\nexport type SearchProductsInput = {\n  search?: string\n  categoryId?: string\n  brandId?: string\n  sort?: string\n}\n\nexport type SearchProductsData = {\n  products: Product[]\n  found: boolean\n}\n\nexport const handler: SWRHook<\n  SearchProductsData,\n  SearchProductsInput,\n  SearchProductsInput\n> = {\n  fetchOptions: {\n    query: getAllProductsQuery,\n  },\n  async fetcher({ input, options, fetch }) {\n    const { categoryId, brandId } = input\n\n    const data = await fetch({\n      query: categoryId ? getCollectionProductsQuery : options.query,\n      method: options?.method,\n      variables: getSearchVariables(input),\n    })\n\n    let edges\n\n    if (categoryId) {\n      edges = data.node?.products?.edges ?? []\n      if (brandId) {\n        edges = edges.filter(\n          ({ node: { vendor } }: ProductEdge) =>\n            vendor.replace(/\\s+/g, '-').toLowerCase() === brandId\n        )\n      }\n    } else {\n      edges = data.products?.edges ?? []\n    }\n\n    return {\n      products: edges.map(({ node }: ProductEdge) => normalizeProduct(node)),\n      found: !!edges.length,\n    }\n  },\n  useHook: ({ useData }) => (input = {}) => {\n    return useData({\n      input: [\n        ['search', input.search],\n        ['categoryId', input.categoryId],\n        ['brandId', input.brandId],\n        ['sort', input.sort],\n      ],\n      swrOptions: {\n        revalidateOnFocus: false,\n        ...input.swrOptions,\n      },\n    })\n  },\n}\n"]},"metadata":{},"sourceType":"module"}