{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thejmdw/workspace/websites/next-commerce-test/components/product/ProductSlider/ProductSlider.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useKeenSlider } from 'keen-slider/react';\nimport React, { Children, isValidElement, useState, useRef, useEffect } from 'react';\nimport cn from 'classnames';\nimport s from './ProductSlider.module.css';\n\nconst ProductSlider = ({\n  children\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  const {\n    0: isMounted,\n    1: setIsMounted\n  } = useState(false);\n  const sliderContainerRef = useRef(null);\n  const [ref, slider] = useKeenSlider({\n    loop: true,\n    slidesPerView: 1,\n    mounted: () => setIsMounted(true),\n\n    slideChanged(s) {\n      setCurrentSlide(s.details().relativeSlide);\n    }\n\n  }); // Stop the history navigation gesture on touch devices\n\n  useEffect(() => {\n    const preventNavigation = event => {\n      // Center point of the touch area\n      const touchXPosition = event.touches[0].pageX; // Size of the touch area\n\n      const touchXRadius = event.touches[0].radiusX || 0; // We set a threshold (10px) on both sizes of the screen,\n      // if the touch area overlaps with the screen edges\n      // it's likely to trigger the navigation. We prevent the\n      // touchstart event in that case.\n\n      if (touchXPosition - touchXRadius < 10 || touchXPosition + touchXRadius > window.innerWidth - 10) event.preventDefault();\n    };\n\n    sliderContainerRef.current.addEventListener('touchstart', preventNavigation);\n    return () => {\n      if (sliderContainerRef.current) {\n        sliderContainerRef.current.removeEventListener('touchstart', preventNavigation);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.root,\n    ref: sliderContainerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: cn(s.leftControl, s.control),\n      onClick: slider === null || slider === void 0 ? void 0 : slider.prev,\n      \"aria-label\": \"Previous Product Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: cn(s.rightControl, s.control),\n      onClick: slider === null || slider === void 0 ? void 0 : slider.next,\n      \"aria-label\": \"Next Product Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: \"keen-slider h-full transition-opacity duration-150\",\n      style: {\n        opacity: isMounted ? 1 : 0\n      },\n      children: Children.map(children, child => {\n        // Add the keen-slider__slide className to children\n        if ( /*#__PURE__*/isValidElement(child)) {\n          return _objectSpread(_objectSpread({}, child), {}, {\n            props: _objectSpread(_objectSpread({}, child.props), {}, {\n              className: `${child.props.className ? `${child.props.className} ` : ''}keen-slider__slide`\n            })\n          });\n        }\n\n        return child;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), slider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(s.positionIndicatorsContainer),\n      children: [...Array(slider.details().size).keys()].map(idx => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          \"aria-label\": \"Position indicator\",\n          className: cn(s.positionIndicator, {\n            [s.positionIndicatorActive]: currentSlide === idx\n          }),\n          onClick: () => {\n            slider.moveToSlideRelative(idx);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.dot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProductSlider;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/components/product/ProductSlider/ProductSlider.tsx"],"names":["useKeenSlider","React","Children","isValidElement","useState","useRef","useEffect","cn","s","ProductSlider","children","currentSlide","setCurrentSlide","isMounted","setIsMounted","sliderContainerRef","ref","slider","loop","slidesPerView","mounted","slideChanged","details","relativeSlide","preventNavigation","event","touchXPosition","touches","pageX","touchXRadius","radiusX","window","innerWidth","preventDefault","current","addEventListener","removeEventListener","root","leftControl","control","prev","rightControl","next","opacity","map","child","props","className","positionIndicatorsContainer","Array","size","keys","idx","positionIndicator","positionIndicatorActive","moveToSlideRelative","dot"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,OAAOC,KAAP,IACEC,QADF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,MALF,EAMEC,SANF,QAOO,OAPP;AAQA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,CAAP,MAAc,4BAAd;;AAEA,MAAMC,aAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCR,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMW,kBAAkB,GAAGV,MAAM,CAAiB,IAAjB,CAAjC;AAEA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBjB,aAAa,CAAiB;AAClDkB,IAAAA,IAAI,EAAE,IAD4C;AAElDC,IAAAA,aAAa,EAAE,CAFmC;AAGlDC,IAAAA,OAAO,EAAE,MAAMN,YAAY,CAAC,IAAD,CAHuB;;AAIlDO,IAAAA,YAAY,CAACb,CAAD,EAAI;AACdI,MAAAA,eAAe,CAACJ,CAAC,CAACc,OAAF,GAAYC,aAAb,CAAf;AACD;;AANiD,GAAjB,CAAnC,CAL0C,CAc1C;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,iBAAiB,GAAIC,KAAD,IAAuB;AAC/C;AACA,YAAMC,cAAc,GAAGD,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiBC,KAAxC,CAF+C,CAG/C;;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiBG,OAAjB,IAA4B,CAAjD,CAJ+C,CAM/C;AACA;AACA;AACA;;AACA,UACEJ,cAAc,GAAGG,YAAjB,GAAgC,EAAhC,IACAH,cAAc,GAAGG,YAAjB,GAAgCE,MAAM,CAACC,UAAP,GAAoB,EAFtD,EAIEP,KAAK,CAACQ,cAAN;AACH,KAfD;;AAiBAlB,IAAAA,kBAAkB,CAACmB,OAAnB,CAA4BC,gBAA5B,CACE,YADF,EAEEX,iBAFF;AAKA,WAAO,MAAM;AACX,UAAIT,kBAAkB,CAACmB,OAAvB,EAAgC;AAC9BnB,QAAAA,kBAAkB,CAACmB,OAAnB,CAA4BE,mBAA5B,CACE,YADF,EAEEZ,iBAFF;AAID;AACF,KAPD;AAQD,GA/BQ,EA+BN,EA/BM,CAAT;AAiCA,sBACE;AAAK,IAAA,SAAS,EAAEhB,CAAC,CAAC6B,IAAlB;AAAwB,IAAA,GAAG,EAAEtB,kBAA7B;AAAA,4BACE;AACE,MAAA,SAAS,EAAER,EAAE,CAACC,CAAC,CAAC8B,WAAH,EAAgB9B,CAAC,CAAC+B,OAAlB,CADf;AAEE,MAAA,OAAO,EAAEtB,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEuB,IAFnB;AAGE,oBAAW;AAHb;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AACE,MAAA,SAAS,EAAEjC,EAAE,CAACC,CAAC,CAACiC,YAAH,EAAiBjC,CAAC,CAAC+B,OAAnB,CADf;AAEE,MAAA,OAAO,EAAEtB,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEyB,IAFnB;AAGE,oBAAW;AAHb;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AACE,MAAA,GAAG,EAAE1B,GADP;AAEE,MAAA,SAAS,EAAC,oDAFZ;AAGE,MAAA,KAAK,EAAE;AAAE2B,QAAAA,OAAO,EAAE9B,SAAS,GAAG,CAAH,GAAO;AAA3B,OAHT;AAAA,gBAKGX,QAAQ,CAAC0C,GAAT,CAAalC,QAAb,EAAwBmC,KAAD,IAAW;AACjC;AACA,0BAAI1C,cAAc,CAAC0C,KAAD,CAAlB,EAA2B;AACzB,iDACKA,KADL;AAEEC,YAAAA,KAAK,kCACAD,KAAK,CAACC,KADN;AAEHC,cAAAA,SAAS,EAAG,GACVF,KAAK,CAACC,KAAN,CAAYC,SAAZ,GAAyB,GAAEF,KAAK,CAACC,KAAN,CAAYC,SAAU,GAAjD,GAAsD,EACvD;AAJE;AAFP;AASD;;AACD,eAAOF,KAAP;AACD,OAdA;AALH;AAAA;AAAA;AAAA;AAAA,YAXF,EAgCG5B,MAAM,iBACL;AAAK,MAAA,SAAS,EAAEV,EAAE,CAACC,CAAC,CAACwC,2BAAH,CAAlB;AAAA,gBACG,CAAC,GAAGC,KAAK,CAAChC,MAAM,CAACK,OAAP,GAAiB4B,IAAlB,CAAL,CAA6BC,IAA7B,EAAJ,EAAyCP,GAAzC,CAA8CQ,GAAD,IAAS;AACrD,4BACE;AACE,wBAAW,oBADb;AAGE,UAAA,SAAS,EAAE7C,EAAE,CAACC,CAAC,CAAC6C,iBAAH,EAAsB;AACjC,aAAC7C,CAAC,CAAC8C,uBAAH,GAA6B3C,YAAY,KAAKyC;AADb,WAAtB,CAHf;AAME,UAAA,OAAO,EAAE,MAAM;AACbnC,YAAAA,MAAM,CAACsC,mBAAP,CAA2BH,GAA3B;AACD,WARH;AAAA,iCAUE;AAAK,YAAA,SAAS,EAAE5C,CAAC,CAACgD;AAAlB;AAAA;AAAA;AAAA;AAAA;AAVF,WAEOJ,GAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD,OAfA;AADH;AAAA;AAAA;AAAA;AAAA,YAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CAvGD;;AAyGA,eAAe3C,aAAf","sourcesContent":["import { useKeenSlider } from 'keen-slider/react'\nimport React, {\n  Children,\n  FC,\n  isValidElement,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport cn from 'classnames'\n\nimport s from './ProductSlider.module.css'\n\nconst ProductSlider: FC = ({ children }) => {\n  const [currentSlide, setCurrentSlide] = useState(0)\n  const [isMounted, setIsMounted] = useState(false)\n  const sliderContainerRef = useRef<HTMLDivElement>(null)\n\n  const [ref, slider] = useKeenSlider<HTMLDivElement>({\n    loop: true,\n    slidesPerView: 1,\n    mounted: () => setIsMounted(true),\n    slideChanged(s) {\n      setCurrentSlide(s.details().relativeSlide)\n    },\n  })\n\n  // Stop the history navigation gesture on touch devices\n  useEffect(() => {\n    const preventNavigation = (event: TouchEvent) => {\n      // Center point of the touch area\n      const touchXPosition = event.touches[0].pageX\n      // Size of the touch area\n      const touchXRadius = event.touches[0].radiusX || 0\n\n      // We set a threshold (10px) on both sizes of the screen,\n      // if the touch area overlaps with the screen edges\n      // it's likely to trigger the navigation. We prevent the\n      // touchstart event in that case.\n      if (\n        touchXPosition - touchXRadius < 10 ||\n        touchXPosition + touchXRadius > window.innerWidth - 10\n      )\n        event.preventDefault()\n    }\n\n    sliderContainerRef.current!.addEventListener(\n      'touchstart',\n      preventNavigation\n    )\n\n    return () => {\n      if (sliderContainerRef.current) {\n        sliderContainerRef.current!.removeEventListener(\n          'touchstart',\n          preventNavigation\n        )\n      }\n    }\n  }, [])\n\n  return (\n    <div className={s.root} ref={sliderContainerRef}>\n      <button\n        className={cn(s.leftControl, s.control)}\n        onClick={slider?.prev}\n        aria-label=\"Previous Product Image\"\n      />\n      <button\n        className={cn(s.rightControl, s.control)}\n        onClick={slider?.next}\n        aria-label=\"Next Product Image\"\n      />\n      <div\n        ref={ref}\n        className=\"keen-slider h-full transition-opacity duration-150\"\n        style={{ opacity: isMounted ? 1 : 0 }}\n      >\n        {Children.map(children, (child) => {\n          // Add the keen-slider__slide className to children\n          if (isValidElement(child)) {\n            return {\n              ...child,\n              props: {\n                ...child.props,\n                className: `${\n                  child.props.className ? `${child.props.className} ` : ''\n                }keen-slider__slide`,\n              },\n            }\n          }\n          return child\n        })}\n      </div>\n      {slider && (\n        <div className={cn(s.positionIndicatorsContainer)}>\n          {[...Array(slider.details().size).keys()].map((idx) => {\n            return (\n              <button\n                aria-label=\"Position indicator\"\n                key={idx}\n                className={cn(s.positionIndicator, {\n                  [s.positionIndicatorActive]: currentSlide === idx,\n                })}\n                onClick={() => {\n                  slider.moveToSlideRelative(idx)\n                }}\n              >\n                <div className={s.dot} />\n              </button>\n            )\n          })}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProductSlider\n"]},"metadata":{},"sourceType":"module"}