{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useCallback } from 'react';\nimport useLogout from '@commerce/auth/use-logout';\nimport useCustomer from '../customer/use-customer';\nimport customerAccessTokenDeleteMutation from '../utils/mutations/customer-access-token-delete';\nimport { getCustomerToken, setCustomerToken } from '../utils/customer-token';\nexport default useLogout;\nexport var handler = {\n  fetchOptions: {\n    query: customerAccessTokenDeleteMutation\n  },\n  fetcher: function fetcher(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options, fetch;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _ref.options, fetch = _ref.fetch;\n              _context.next = 3;\n              return fetch(_objectSpread(_objectSpread({}, options), {}, {\n                variables: {\n                  customerAccessToken: getCustomerToken()\n                }\n              }));\n\n            case 3:\n              setCustomerToken(null);\n              return _context.abrupt(\"return\", null);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  useHook: function useHook(_ref2) {\n    var _s = $RefreshSig$();\n\n    var fetch = _ref2.fetch;\n    return _s(function () {\n      _s();\n\n      var _useCustomer = useCustomer(),\n          mutate = _useCustomer.mutate;\n\n      return useCallback( /*#__PURE__*/function () {\n        var _logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return fetch();\n\n                case 2:\n                  data = _context2.sent;\n                  _context2.next = 5;\n                  return mutate(null, false);\n\n                case 5:\n                  return _context2.abrupt(\"return\", data);\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        function logout() {\n          return _logout.apply(this, arguments);\n        }\n\n        return logout;\n      }(), [fetch, mutate]);\n    }, \"lBaQPlSbCnTO28LhxICVEXmxxdI=\", false, function () {\n      return [useCustomer];\n    });\n  }\n};","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/auth/use-logout.tsx"],"names":["useCallback","useLogout","useCustomer","customerAccessTokenDeleteMutation","getCustomerToken","setCustomerToken","handler","fetchOptions","query","fetcher","options","fetch","variables","customerAccessToken","useHook","mutate","data","logout"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAOC,SAAP,MAAqC,2BAArC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,iCAAP,MAA8C,iDAA9C;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,yBAAnD;AAEA,eAAeJ,SAAf;AAEA,OAAO,IAAMK,OAA2B,GAAG;AACzCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAEL;AADK,GAD2B;AAInCM,EAAAA,OAJmC,yBAIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlBC,cAAAA,OAAkB,QAAlBA,OAAkB,EAATC,KAAS,QAATA,KAAS;AAAA;AAAA,qBAC1BA,KAAK,iCACND,OADM;AAETE,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,mBAAmB,EAAET,gBAAgB;AAD5B;AAFF,iBADqB;;AAAA;AAOhCC,cAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAPgC,+CAQzB,IARyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASjC,GAbwC;AAczCS,EAAAA,OAAO,EAAE;AAAA;;AAAA,QAAGH,KAAH,SAAGA,KAAH;AAAA,cAAe,YAAM;AAAA;;AAAA,yBACTT,WAAW,EADF;AAAA,UACpBa,MADoB,gBACpBA,MADoB;;AAG5B,aAAOf,WAAW;AAAA,+EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACqBW,KAAK,EAD1B;;AAAA;AACQK,kBAAAA,IADR;AAAA;AAAA,yBAEQD,MAAM,CAAC,IAAD,EAAO,KAAP,CAFd;;AAAA;AAAA,oDAGSC,IAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADgB;;AAAA,iBACDC,MADC;AAAA;AAAA;;AAAA,eACDA,MADC;AAAA,WAMhB,CAACN,KAAD,EAAQI,MAAR,CANgB,CAAlB;AAQD,KAXQ;AAAA,cACYb,WADZ;AAAA;AAAA;AAdgC,CAApC","sourcesContent":["import { useCallback } from 'react'\nimport type { MutationHook } from '@commerce/utils/types'\nimport useLogout, { UseLogout } from '@commerce/auth/use-logout'\nimport useCustomer from '../customer/use-customer'\nimport customerAccessTokenDeleteMutation from '../utils/mutations/customer-access-token-delete'\nimport { getCustomerToken, setCustomerToken } from '../utils/customer-token'\n\nexport default useLogout as UseLogout<typeof handler>\n\nexport const handler: MutationHook<null> = {\n  fetchOptions: {\n    query: customerAccessTokenDeleteMutation,\n  },\n  async fetcher({ options, fetch }) {\n    await fetch({\n      ...options,\n      variables: {\n        customerAccessToken: getCustomerToken(),\n      },\n    })\n    setCustomerToken(null)\n    return null\n  },\n  useHook: ({ fetch }) => () => {\n    const { mutate } = useCustomer()\n\n    return useCallback(\n      async function logout() {\n        const data = await fetch()\n        await mutate(null, false)\n        return data\n      },\n      [fetch, mutate]\n    )\n  },\n}\n"]},"metadata":{},"sourceType":"module"}