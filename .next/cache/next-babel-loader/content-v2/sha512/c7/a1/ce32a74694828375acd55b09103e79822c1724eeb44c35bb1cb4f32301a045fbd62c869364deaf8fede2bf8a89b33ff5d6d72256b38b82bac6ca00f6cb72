{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport getSiteCollectionsQuery from './queries/get-all-collections-query';\n\nvar getCategories = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n    var _data$collections$edg, _data$collections, _data$collections$edg2;\n\n    var _yield$config$fetch, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return config.fetch(getSiteCollectionsQuery, {\n              variables: {\n                first: 250\n              }\n            });\n\n          case 2:\n            _yield$config$fetch = _context.sent;\n            data = _yield$config$fetch.data;\n            return _context.abrupt(\"return\", (_data$collections$edg = (_data$collections = data.collections) === null || _data$collections === void 0 ? void 0 : (_data$collections$edg2 = _data$collections.edges) === null || _data$collections$edg2 === void 0 ? void 0 : _data$collections$edg2.map(function (_ref2) {\n              var _ref2$node = _ref2.node,\n                  entityId = _ref2$node.id,\n                  name = _ref2$node.title,\n                  handle = _ref2$node.handle;\n              return {\n                entityId: entityId,\n                name: name,\n                path: \"/\".concat(handle)\n              };\n            })) !== null && _data$collections$edg !== void 0 ? _data$collections$edg : []);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getCategories(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default getCategories;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/utils/get-categories.ts"],"names":["getSiteCollectionsQuery","getCategories","config","fetch","variables","first","data","collections","edges","map","node","entityId","id","name","title","handle","path"],"mappings":";;AAEA,OAAOA,uBAAP,MAAoC,qCAApC;;AAQA,IAAMC,aAAa;AAAA,sEAAG,iBAAOC,MAAP;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGA,MAAM,CAACC,KAAP,CAAaH,uBAAb,EAAsC;AAC3DI,cAAAA,SAAS,EAAE;AACTC,gBAAAA,KAAK,EAAE;AADE;AADgD,aAAtC,CADH;;AAAA;AAAA;AACZC,YAAAA,IADY,uBACZA,IADY;AAAA,2FAQlBA,IAAI,CAACC,WARa,gFAQlB,kBAAkBC,KARA,2DAQlB,uBAAyBC,GAAzB,CACE;AAAA,qCAAGC,IAAH;AAAA,kBAAeC,QAAf,cAAWC,EAAX;AAAA,kBAAgCC,IAAhC,cAAyBC,KAAzB;AAAA,kBAAsCC,MAAtC,cAAsCA,MAAtC;AAAA,qBAAsE;AACpEJ,gBAAAA,QAAQ,EAARA,QADoE;AAEpEE,gBAAAA,IAAI,EAAJA,IAFoE;AAGpEG,gBAAAA,IAAI,aAAMD,MAAN;AAHgE,eAAtE;AAAA,aADF,CARkB,yEAcb,EAda;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbd,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAkBA,eAAeA,aAAf","sourcesContent":["import { ShopifyConfig } from '../api'\nimport { CollectionEdge } from '../schema'\nimport getSiteCollectionsQuery from './queries/get-all-collections-query'\n\nexport type Category = {\n  entityId: string\n  name: string\n  path: string\n}\n\nconst getCategories = async (config: ShopifyConfig): Promise<Category[]> => {\n  const { data } = await config.fetch(getSiteCollectionsQuery, {\n    variables: {\n      first: 250,\n    },\n  })\n\n  return (\n    data.collections?.edges?.map(\n      ({ node: { id: entityId, title: name, handle } }: CollectionEdge) => ({\n        entityId,\n        name,\n        path: `/${handle}`,\n      })\n    ) ?? []\n  )\n}\n\nexport default getCategories\n"]},"metadata":{},"sourceType":"module"}