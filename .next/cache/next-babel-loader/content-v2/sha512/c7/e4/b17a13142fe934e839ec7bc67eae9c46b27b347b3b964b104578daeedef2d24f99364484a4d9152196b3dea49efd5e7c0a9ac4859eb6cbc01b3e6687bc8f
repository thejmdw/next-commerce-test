{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thejmdw/workspace/websites/next-commerce-test/components/ui/Skeleton/Skeleton.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport cn from 'classnames';\nimport px from '@lib/to-pixels';\nimport s from './Skeleton.module.css';\n\nconst Skeleton = ({\n  style,\n  width,\n  height,\n  children,\n  className,\n  show = true,\n  boxHeight = height\n}) => {\n  // Automatically calculate the size if there are children\n  // and no fixed sizes are specified\n  const shouldAutoSize = !!children && !(width || height); // Defaults\n\n  width = width || 24;\n  height = height || 24;\n  boxHeight = boxHeight || height;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: cn(s.skeleton, className, {\n      [s.show]: show,\n      [s.wrapper]: shouldAutoSize,\n      [s.loaded]: !shouldAutoSize && !!children\n    }),\n    style: shouldAutoSize ? {} : _objectSpread({\n      minWidth: px(width),\n      minHeight: px(height),\n      marginBottom: `calc(${px(boxHeight)} - ${px(height)})`\n    }, style),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Skeleton;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/components/ui/Skeleton/Skeleton.tsx"],"names":["React","cn","px","s","Skeleton","style","width","height","children","className","show","boxHeight","shouldAutoSize","skeleton","wrapper","loaded","minWidth","minHeight","marginBottom"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,EAAP,MAAe,gBAAf;AACA,OAAOC,CAAP,MAAc,uBAAd;;AAYA,MAAMC,QAAyB,GAAG,CAAC;AACjCC,EAAAA,KADiC;AAEjCC,EAAAA,KAFiC;AAGjCC,EAAAA,MAHiC;AAIjCC,EAAAA,QAJiC;AAKjCC,EAAAA,SALiC;AAMjCC,EAAAA,IAAI,GAAG,IAN0B;AAOjCC,EAAAA,SAAS,GAAGJ;AAPqB,CAAD,KAQ5B;AACJ;AACA;AACA,QAAMK,cAAc,GAAG,CAAC,CAACJ,QAAF,IAAc,EAAEF,KAAK,IAAIC,MAAX,CAArC,CAHI,CAKJ;;AACAD,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACAC,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAI,EAAAA,SAAS,GAAGA,SAAS,IAAIJ,MAAzB;AAEA,sBACE;AACE,IAAA,SAAS,EAAEN,EAAE,CAACE,CAAC,CAACU,QAAH,EAAaJ,SAAb,EAAwB;AACnC,OAACN,CAAC,CAACO,IAAH,GAAUA,IADyB;AAEnC,OAACP,CAAC,CAACW,OAAH,GAAaF,cAFsB;AAGnC,OAACT,CAAC,CAACY,MAAH,GAAY,CAACH,cAAD,IAAmB,CAAC,CAACJ;AAHE,KAAxB,CADf;AAME,IAAA,KAAK,EACHI,cAAc,GACV,EADU;AAGRI,MAAAA,QAAQ,EAAEd,EAAE,CAACI,KAAD,CAHJ;AAIRW,MAAAA,SAAS,EAAEf,EAAE,CAACK,MAAD,CAJL;AAKRW,MAAAA,YAAY,EAAG,QAAOhB,EAAE,CAACS,SAAD,CAAY,MAAKT,EAAE,CAACK,MAAD,CAAS;AAL5C,OAMLF,KANK,CAPlB;AAAA,cAiBGG;AAjBH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvCD;;AAyCA,eAAeJ,QAAf","sourcesContent":["import React, { CSSProperties } from 'react'\nimport cn from 'classnames'\nimport px from '@lib/to-pixels'\nimport s from './Skeleton.module.css'\n\ninterface Props {\n  width?: string | number\n  height?: string | number\n  boxHeight?: string | number\n  style?: CSSProperties\n  show?: boolean\n  block?: boolean\n  className?: string\n}\n\nconst Skeleton: React.FC<Props> = ({\n  style,\n  width,\n  height,\n  children,\n  className,\n  show = true,\n  boxHeight = height,\n}) => {\n  // Automatically calculate the size if there are children\n  // and no fixed sizes are specified\n  const shouldAutoSize = !!children && !(width || height)\n\n  // Defaults\n  width = width || 24\n  height = height || 24\n  boxHeight = boxHeight || height\n\n  return (\n    <span\n      className={cn(s.skeleton, className, {\n        [s.show]: show,\n        [s.wrapper]: shouldAutoSize,\n        [s.loaded]: !shouldAutoSize && !!children,\n      })}\n      style={\n        shouldAutoSize\n          ? {}\n          : {\n              minWidth: px(width),\n              minHeight: px(height),\n              marginBottom: `calc(${px(boxHeight)} - ${px(height)})`,\n              ...style,\n            }\n      }\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default Skeleton\n"]},"metadata":{},"sourceType":"module"}