{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useCallback } from 'react';\nimport { ValidationError } from '@commerce/utils/errors';\nimport useRemoveItem from '@commerce/cart/use-remove-item';\nimport useCart from './use-cart';\nimport { checkoutLineItemRemoveMutation, getCheckoutId, checkoutToCart } from '../utils';\nexport default useRemoveItem;\nexport var handler = {\n  fetchOptions: {\n    query: checkoutLineItemRemoveMutation\n  },\n  fetcher: function fetcher(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var itemId, options, fetch, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              itemId = _ref.input.itemId, options = _ref.options, fetch = _ref.fetch;\n              _context.next = 3;\n              return fetch(_objectSpread(_objectSpread({}, options), {}, {\n                variables: {\n                  checkoutId: getCheckoutId(),\n                  lineItemIds: [itemId]\n                }\n              }));\n\n            case 3:\n              data = _context.sent;\n              return _context.abrupt(\"return\", checkoutToCart(data.checkoutLineItemsRemove));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  useHook: function useHook(_ref2) {\n    var _s = $RefreshSig$();\n\n    var fetch = _ref2.fetch;\n    return _s(function () {\n      _s();\n\n      var ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var item = ctx.item;\n\n      var _useCart = useCart(),\n          mutate = _useCart.mutate;\n\n      var removeItem = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(input) {\n          var _input$id;\n\n          var itemId, data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  itemId = (_input$id = input === null || input === void 0 ? void 0 : input.id) !== null && _input$id !== void 0 ? _input$id : item === null || item === void 0 ? void 0 : item.id;\n\n                  if (itemId) {\n                    _context2.next = 3;\n                    break;\n                  }\n\n                  throw new ValidationError({\n                    message: 'Invalid input used for this operation'\n                  });\n\n                case 3:\n                  _context2.next = 5;\n                  return fetch({\n                    input: {\n                      itemId: itemId\n                    }\n                  });\n\n                case 5:\n                  data = _context2.sent;\n                  _context2.next = 8;\n                  return mutate(data, false);\n\n                case 8:\n                  return _context2.abrupt(\"return\", data);\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function removeItem(_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n\n      return useCallback(removeItem, [fetch, mutate]);\n    }, \"ZEdD7D/1wfvJEBfCpEyxj7ympJY=\", false, function () {\n      return [useCart];\n    });\n  }\n};","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/cart/use-remove-item.tsx"],"names":["useCallback","ValidationError","useRemoveItem","useCart","checkoutLineItemRemoveMutation","getCheckoutId","checkoutToCart","handler","fetchOptions","query","fetcher","itemId","input","options","fetch","variables","checkoutId","lineItemIds","data","checkoutLineItemsRemove","useHook","ctx","item","mutate","removeItem","id","message"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAMA,SAASC,eAAT,QAAgC,wBAAhC;AACA,OAAOC,aAAP,MAGO,gCAHP;AAIA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACEC,8BADF,EAEEC,aAFF,EAGEC,cAHF,QAIO,UAJP;AAgBA,eAAeJ,aAAf;AAEA,OAAO,IAAMK,OAAO,GAAG;AACrBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAEL;AADK,GADO;AAIfM,EAAAA,OAJe,yBAQsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHhCC,cAAAA,MAGgC,QAHzCC,KAGyC,CAHhCD,MAGgC,EAFzCE,OAEyC,QAFzCA,OAEyC,EADzCC,KACyC,QADzCA,KACyC;AAAA;AAAA,qBACtBA,KAAK,iCACnBD,OADmB;AAEtBE,gBAAAA,SAAS,EAAE;AAAEC,kBAAAA,UAAU,EAAEX,aAAa,EAA3B;AAA+BY,kBAAAA,WAAW,EAAE,CAACN,MAAD;AAA5C;AAFW,iBADiB;;AAAA;AACnCO,cAAAA,IADmC;AAAA,+CAKlCZ,cAAc,CAACY,IAAI,CAACC,uBAAN,CALoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM1C,GAdoB;AAerBC,EAAAA,OAAO,EAAE;AAAA;;AAAA,QACPN,KADO,SACPA,KADO;AAAA,cAEmD,YAIvD;AAAA;;AAAA,UADHO,GACG,uEADiB,EACjB;AAAA,UACKC,IADL,GACcD,GADd,CACKC,IADL;;AAAA,qBAEgBnB,OAAO,EAFvB;AAAA,UAEKoB,MAFL,YAEKA,MAFL;;AAGH,UAAMC,UAAkC;AAAA,6EAAG,kBAAOZ,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACnCD,kBAAAA,MADmC,gBAC1BC,KAD0B,aAC1BA,KAD0B,uBAC1BA,KAAK,CAAEa,EADmB,iDACbH,IADa,aACbA,IADa,uBACbA,IAAI,CAAEG,EADO;;AAAA,sBAGpCd,MAHoC;AAAA;AAAA;AAAA;;AAAA,wBAIjC,IAAIV,eAAJ,CAAoB;AACxByB,oBAAAA,OAAO,EAAE;AADe,mBAApB,CAJiC;;AAAA;AAAA;AAAA,yBAStBZ,KAAK,CAAC;AAAEF,oBAAAA,KAAK,EAAE;AAAED,sBAAAA,MAAM,EAANA;AAAF;AAAT,mBAAD,CATiB;;AAAA;AASnCO,kBAAAA,IATmC;AAAA;AAAA,yBAUnCK,MAAM,CAACL,IAAD,EAAO,KAAP,CAV6B;;AAAA;AAAA,oDAWlCA,IAXkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAlCM,UAAkC;AAAA;AAAA;AAAA,SAAxC;;AAcA,aAAOxB,WAAW,CAACwB,UAAD,EAAgC,CAACV,KAAD,EAAQS,MAAR,CAAhC,CAAlB;AACD,KAxBQ;AAAA,cAQYpB,OARZ;AAAA;AAAA;AAfY,CAAhB","sourcesContent":["import { useCallback } from 'react'\nimport type {\n  MutationHookContext,\n  HookFetcherContext,\n} from '@commerce/utils/types'\nimport { RemoveCartItemBody } from '@commerce/types'\nimport { ValidationError } from '@commerce/utils/errors'\nimport useRemoveItem, {\n  RemoveItemInput as RemoveItemInputBase,\n  UseRemoveItem,\n} from '@commerce/cart/use-remove-item'\nimport useCart from './use-cart'\nimport {\n  checkoutLineItemRemoveMutation,\n  getCheckoutId,\n  checkoutToCart,\n} from '../utils'\nimport { Cart, LineItem } from '../types'\nimport { Mutation, MutationCheckoutLineItemsRemoveArgs } from '../schema'\n\nexport type RemoveItemFn<T = any> = T extends LineItem\n  ? (input?: RemoveItemInput<T>) => Promise<Cart | null>\n  : (input: RemoveItemInput<T>) => Promise<Cart | null>\n\nexport type RemoveItemInput<T = any> = T extends LineItem\n  ? Partial<RemoveItemInputBase>\n  : RemoveItemInputBase\n\nexport default useRemoveItem as UseRemoveItem<typeof handler>\n\nexport const handler = {\n  fetchOptions: {\n    query: checkoutLineItemRemoveMutation,\n  },\n  async fetcher({\n    input: { itemId },\n    options,\n    fetch,\n  }: HookFetcherContext<RemoveCartItemBody>) {\n    const data = await fetch<Mutation, MutationCheckoutLineItemsRemoveArgs>({\n      ...options,\n      variables: { checkoutId: getCheckoutId(), lineItemIds: [itemId] },\n    })\n    return checkoutToCart(data.checkoutLineItemsRemove)\n  },\n  useHook: ({\n    fetch,\n  }: MutationHookContext<Cart | null, RemoveCartItemBody>) => <\n    T extends LineItem | undefined = undefined\n  >(\n    ctx: { item?: T } = {}\n  ) => {\n    const { item } = ctx\n    const { mutate } = useCart()\n    const removeItem: RemoveItemFn<LineItem> = async (input) => {\n      const itemId = input?.id ?? item?.id\n\n      if (!itemId) {\n        throw new ValidationError({\n          message: 'Invalid input used for this operation',\n        })\n      }\n\n      const data = await fetch({ input: { itemId } })\n      await mutate(data, false)\n      return data\n    }\n\n    return useCallback(removeItem as RemoveItemFn<T>, [fetch, mutate])\n  },\n}\n"]},"metadata":{},"sourceType":"module"}