{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API_TOKEN, API_URL } from './const';\nimport { handleFetchResponse } from './utils';\n\nvar fetcher = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var _ref$url, url, _ref$method, method, variables, query;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref$url = _ref.url, url = _ref$url === void 0 ? API_URL : _ref$url, _ref$method = _ref.method, method = _ref$method === void 0 ? 'POST' : _ref$method, variables = _ref.variables, query = _ref.query;\n            _context.t0 = handleFetchResponse;\n            _context.next = 4;\n            return fetch(url, {\n              method: method,\n              body: JSON.stringify({\n                query: query,\n                variables: variables\n              }),\n              headers: {\n                'X-Shopify-Storefront-Access-Token': API_TOKEN,\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 4:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetcher(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default fetcher;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/fetcher.ts"],"names":["API_TOKEN","API_URL","handleFetchResponse","fetcher","url","method","variables","query","fetch","body","JSON","stringify","headers"],"mappings":";;AACA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,SAAnC;AACA,SAASC,mBAAT,QAAoC,SAApC;;AAEA,IAAMC,OAAgB;AAAA,uEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACvBC,GADuB,EACvBA,GADuB,yBACjBH,OADiB,gCAEvBI,MAFuB,EAEvBA,MAFuB,4BAEd,MAFc,gBAGvBC,SAHuB,QAGvBA,SAHuB,EAIvBC,KAJuB,QAIvBA,KAJuB;AAAA,0BAMhBL,mBANgB;AAAA;AAAA,mBAOfM,KAAK,CAACJ,GAAD,EAAM;AACfC,cAAAA,MAAM,EAANA,MADe;AAEfI,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEJ,gBAAAA,KAAK,EAALA,KAAF;AAASD,gBAAAA,SAAS,EAATA;AAAT,eAAf,CAFS;AAGfM,cAAAA,OAAO,EAAE;AACP,qDAAqCZ,SAD9B;AAEP,gCAAgB;AAFT;AAHM,aAAN,CAPU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBG,OAAgB;AAAA;AAAA;AAAA,GAAtB;;AAkBA,eAAeA,OAAf","sourcesContent":["import { Fetcher } from '@commerce/utils/types'\nimport { API_TOKEN, API_URL } from './const'\nimport { handleFetchResponse } from './utils'\n\nconst fetcher: Fetcher = async ({\n  url = API_URL,\n  method = 'POST',\n  variables,\n  query,\n}) => {\n  return handleFetchResponse(\n    await fetch(url, {\n      method,\n      body: JSON.stringify({ query, variables }),\n      headers: {\n        'X-Shopify-Storefront-Access-Token': API_TOKEN!,\n        'Content-Type': 'application/json',\n      },\n    })\n  )\n}\n\nexport default fetcher\n"]},"metadata":{},"sourceType":"module"}