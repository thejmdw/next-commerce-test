{"ast":null,"code":"import _defineProperty from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useHook, useMutationHook } from '../utils/use-hook';\nimport { mutationFetcher } from '../utils/default-fetcher';\nexport var fetcher = mutationFetcher;\n\nvar fn = function fn(provider) {\n  var _provider$cart;\n\n  return (_provider$cart = provider.cart) === null || _provider$cart === void 0 ? void 0 : _provider$cart.useUpdateItem;\n};\n\nvar useUpdateItem = function useUpdateItem(input) {\n  _s();\n\n  var hook = useHook(fn);\n  return useMutationHook(_objectSpread({\n    fetcher: fetcher\n  }, hook))(input);\n};\n\n_s(useUpdateItem, \"D4tzF3cVvsrup3AWRTOwziI54fs=\", false, function () {\n  return [useHook, useMutationHook];\n});\n\nexport default useUpdateItem;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/commerce/cart/use-update-item.tsx"],"names":["useHook","useMutationHook","mutationFetcher","fetcher","fn","provider","cart","useUpdateItem","input","hook"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,EAAkBC,eAAlB,QAAyC,mBAAzC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAwBA,OAAO,IAAMC,OAGZ,GAAGD,eAHG;;AAKP,IAAME,EAAE,GAAG,SAALA,EAAK,CAACC,QAAD;AAAA;;AAAA,2BAAwBA,QAAQ,CAACC,IAAjC,mDAAwB,eAAeC,aAAvC;AAAA,CAAX;;AAEA,IAAMA,aAA4B,GAAG,SAA/BA,aAA+B,CAACC,KAAD,EAAW;AAAA;;AAC9C,MAAMC,IAAI,GAAGT,OAAO,CAACI,EAAD,CAApB;AACA,SAAOH,eAAe;AAAGE,IAAAA,OAAO,EAAPA;AAAH,KAAeM,IAAf,EAAf,CAAsCD,KAAtC,CAAP;AACD,CAHD;;GAAMD,a;UACSP,O,EACNC,e;;;AAGT,eAAeM,aAAf","sourcesContent":["import { useHook, useMutationHook } from '../utils/use-hook'\nimport { mutationFetcher } from '../utils/default-fetcher'\nimport type { HookFetcherFn, MutationHook } from '../utils/types'\nimport type { Cart, CartItemBody, LineItem, UpdateCartItemBody } from '../types'\nimport type { Provider } from '..'\n\n/**\n * Input expected by the action returned by the `useUpdateItem` hook\n */\nexport type UpdateItemInput<T extends CartItemBody> = T & {\n  id: string\n}\n\nexport type UseUpdateItem<\n  H extends MutationHook<any, any, any> = MutationHook<\n    Cart | null,\n    {\n      item?: LineItem\n      wait?: number\n    },\n    UpdateItemInput<CartItemBody>,\n    UpdateCartItemBody<CartItemBody>\n  >\n> = ReturnType<H['useHook']>\n\nexport const fetcher: HookFetcherFn<\n  Cart | null,\n  UpdateCartItemBody<CartItemBody>\n> = mutationFetcher\n\nconst fn = (provider: Provider) => provider.cart?.useUpdateItem!\n\nconst useUpdateItem: UseUpdateItem = (input) => {\n  const hook = useHook(fn)\n  return useMutationHook({ fetcher, ...hook })(input)\n}\n\nexport default useUpdateItem\n"]},"metadata":{},"sourceType":"module"}