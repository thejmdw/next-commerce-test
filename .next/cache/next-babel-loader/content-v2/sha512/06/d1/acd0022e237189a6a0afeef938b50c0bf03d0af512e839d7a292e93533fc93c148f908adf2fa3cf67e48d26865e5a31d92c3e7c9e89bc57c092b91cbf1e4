{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class CommerceError extends Error {\n  constructor({\n    message,\n    code,\n    errors\n  }) {\n    const error = message ? _objectSpread({\n      message\n    }, code ? {\n      code\n    } : {}) : errors[0];\n    super(error.message);\n\n    _defineProperty(this, \"code\", void 0);\n\n    _defineProperty(this, \"errors\", void 0);\n\n    this.errors = message ? [error] : errors;\n    if (error.code) this.code = error.code;\n  }\n\n} // Used for errors that come from a bad implementation of the hooks\n\nexport class ValidationError extends CommerceError {\n  constructor(options) {\n    super(options);\n    this.code = 'validation_error';\n  }\n\n}\nexport class FetcherError extends CommerceError {\n  constructor(options) {\n    super(options);\n\n    _defineProperty(this, \"status\", void 0);\n\n    this.status = options.status;\n  }\n\n}","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/commerce/utils/errors.ts"],"names":["CommerceError","Error","constructor","message","code","errors","error","ValidationError","options","FetcherError","status"],"mappings":";;;;;;AAYA,OAAO,MAAMA,aAAN,SAA4BC,KAA5B,CAAkC;AAIvCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAD,EAAwC;AACjD,UAAMC,KAAgB,GAAGH,OAAO;AAC1BA,MAAAA;AAD0B,OACbC,IAAI,GAAG;AAAEA,MAAAA;AAAF,KAAH,GAAc,EADL,IAE5BC,MAAM,CAAE,CAAF,CAFV;AAIA,UAAMC,KAAK,CAACH,OAAZ;;AALiD;;AAAA;;AAMjD,SAAKE,MAAL,GAAcF,OAAO,GAAG,CAACG,KAAD,CAAH,GAAaD,MAAlC;AAEA,QAAIC,KAAK,CAACF,IAAV,EAAgB,KAAKA,IAAL,GAAYE,KAAK,CAACF,IAAlB;AACjB;;AAbsC,C,CAgBzC;;AACA,OAAO,MAAMG,eAAN,SAA8BP,aAA9B,CAA4C;AACjDE,EAAAA,WAAW,CAACM,OAAD,EAAsB;AAC/B,UAAMA,OAAN;AACA,SAAKJ,IAAL,GAAY,kBAAZ;AACD;;AAJgD;AAOnD,OAAO,MAAMK,YAAN,SAA2BT,aAA3B,CAAyC;AAG9CE,EAAAA,WAAW,CACTM,OADS,EAIT;AACA,UAAMA,OAAN;;AADA;;AAEA,SAAKE,MAAL,GAAcF,OAAO,CAACE,MAAtB;AACD;;AAV6C","sourcesContent":["export type ErrorData = {\n  message: string\n  code?: string\n}\n\nexport type ErrorProps = {\n  code?: string\n} & (\n  | { message: string; errors?: never }\n  | { message?: never; errors: ErrorData[] }\n)\n\nexport class CommerceError extends Error {\n  code?: string\n  errors: ErrorData[]\n\n  constructor({ message, code, errors }: ErrorProps) {\n    const error: ErrorData = message\n      ? { message, ...(code ? { code } : {}) }\n      : errors![0]\n\n    super(error.message)\n    this.errors = message ? [error] : errors!\n\n    if (error.code) this.code = error.code\n  }\n}\n\n// Used for errors that come from a bad implementation of the hooks\nexport class ValidationError extends CommerceError {\n  constructor(options: ErrorProps) {\n    super(options)\n    this.code = 'validation_error'\n  }\n}\n\nexport class FetcherError extends CommerceError {\n  status: number\n\n  constructor(\n    options: {\n      status: number\n    } & ErrorProps\n  ) {\n    super(options)\n    this.status = options.status\n  }\n}\n"]},"metadata":{},"sourceType":"module"}