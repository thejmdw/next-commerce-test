{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { tabbable } from 'tabbable';\nexport default function FocusTrap(_ref) {\n  _s();\n\n  var children = _ref.children,\n      _ref$focusFirst = _ref.focusFirst,\n      focusFirst = _ref$focusFirst === void 0 ? false : _ref$focusFirst;\n  var root = React.useRef();\n  var anchor = React.useRef(document.activeElement);\n\n  var returnFocus = function returnFocus() {\n    // Returns focus to the last focused element prior to trap.\n    if (anchor) {\n      anchor.current.focus();\n    }\n  };\n\n  var trapFocus = function trapFocus() {\n    // Focus the container element\n    if (root.current) {\n      root.current.focus();\n\n      if (focusFirst) {\n        selectFirstFocusableEl();\n      }\n    }\n  };\n\n  var selectFirstFocusableEl = function selectFirstFocusableEl() {\n    // Try to find focusable elements, if match then focus\n    // Up to 6 seconds of load time threshold\n    var match = false;\n    var end = 60; // Try to find match at least n times\n\n    var i = 0;\n    var timer = setInterval(function () {\n      if (!match !== i > end) {\n        match = !!tabbable(root.current).length;\n\n        if (match) {\n          // Attempt to focus the first el\n          tabbable(root.current)[0].focus();\n        }\n\n        i = i + 1;\n      } else {\n        // Clear interval after n attempts\n        clearInterval(timer);\n      }\n    }, 100);\n  };\n\n  useEffect(function () {\n    setTimeout(trapFocus, 20);\n    return function () {\n      returnFocus();\n    };\n  }, [root, children]);\n  return /*#__PURE__*/React.createElement('div', {\n    ref: root,\n    children: children,\n    className: 'outline-none focus-trap',\n    tabIndex: -1\n  });\n}\n\n_s(FocusTrap, \"yNWQyXxg3BB4x+lobXQ8TPypt7Y=\");\n\n_c = FocusTrap;\n\nvar _c;\n\n$RefreshReg$(_c, \"FocusTrap\");","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/lib/focus-trap.tsx"],"names":["React","useEffect","tabbable","FocusTrap","children","focusFirst","root","useRef","anchor","document","activeElement","returnFocus","current","focus","trapFocus","selectFirstFocusableEl","match","end","i","timer","setInterval","length","clearInterval","setTimeout","createElement","ref","className","tabIndex"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,UAAzB;AAOA,eAAe,SAASC,SAAT,OAA4D;AAAA;;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,6BAA7BC,UAA6B;AAAA,MAA7BA,UAA6B,gCAAhB,KAAgB;AACzE,MAAMC,IAAoB,GAAGN,KAAK,CAACO,MAAN,EAA7B;AACA,MAAMC,MAAsB,GAAGR,KAAK,CAACO,MAAN,CAAaE,QAAQ,CAACC,aAAtB,CAA/B;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB;AACA,QAAIH,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACI,OAAP,CAAeC,KAAf;AACD;AACF,GALD;;AAOA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB;AACA,QAAIR,IAAI,CAACM,OAAT,EAAkB;AAChBN,MAAAA,IAAI,CAACM,OAAL,CAAaC,KAAb;;AACA,UAAIR,UAAJ,EAAgB;AACdU,QAAAA,sBAAsB;AACvB;AACF;AACF,GARD;;AAUA,MAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC;AACA;AACA,QAAIC,KAAK,GAAG,KAAZ;AACA,QAAIC,GAAG,GAAG,EAAV,CAJmC,CAItB;;AACb,QAAIC,CAAC,GAAG,CAAR;AACA,QAAMC,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC9B,UAAI,CAACJ,KAAD,KAAWE,CAAC,GAAGD,GAAnB,EAAwB;AACtBD,QAAAA,KAAK,GAAG,CAAC,CAACd,QAAQ,CAACI,IAAI,CAACM,OAAN,CAAR,CAAuBS,MAAjC;;AACA,YAAIL,KAAJ,EAAW;AACT;AACAd,UAAAA,QAAQ,CAACI,IAAI,CAACM,OAAN,CAAR,CAAuB,CAAvB,EAA0BC,KAA1B;AACD;;AACDK,QAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD,OAPD,MAOO;AACL;AACAI,QAAAA,aAAa,CAACH,KAAD,CAAb;AACD;AACF,KAZwB,EAYtB,GAZsB,CAAzB;AAaD,GAnBD;;AAqBAlB,EAAAA,SAAS,CAAC,YAAM;AACdsB,IAAAA,UAAU,CAACT,SAAD,EAAY,EAAZ,CAAV;AACA,WAAO,YAAM;AACXH,MAAAA,WAAW;AACZ,KAFD;AAGD,GALQ,EAKN,CAACL,IAAD,EAAOF,QAAP,CALM,CAAT;AAOA,sBAAOJ,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B;AAChCC,IAAAA,GAAG,EAAEnB,IAD2B;AAEhCF,IAAAA,QAAQ,EAARA,QAFgC;AAGhCsB,IAAAA,SAAS,EAAE,yBAHqB;AAIhCC,IAAAA,QAAQ,EAAE,CAAC;AAJqB,GAA3B,CAAP;AAMD;;GAvDuBxB,S;;KAAAA,S","sourcesContent":["import React, { useEffect, RefObject } from 'react'\nimport { tabbable } from 'tabbable'\n\ninterface Props {\n  children: React.ReactNode | any\n  focusFirst?: boolean\n}\n\nexport default function FocusTrap({ children, focusFirst = false }: Props) {\n  const root: RefObject<any> = React.useRef()\n  const anchor: RefObject<any> = React.useRef(document.activeElement)\n\n  const returnFocus = () => {\n    // Returns focus to the last focused element prior to trap.\n    if (anchor) {\n      anchor.current.focus()\n    }\n  }\n\n  const trapFocus = () => {\n    // Focus the container element\n    if (root.current) {\n      root.current.focus()\n      if (focusFirst) {\n        selectFirstFocusableEl()\n      }\n    }\n  }\n\n  const selectFirstFocusableEl = () => {\n    // Try to find focusable elements, if match then focus\n    // Up to 6 seconds of load time threshold\n    let match = false\n    let end = 60 // Try to find match at least n times\n    let i = 0\n    const timer = setInterval(() => {\n      if (!match !== i > end) {\n        match = !!tabbable(root.current).length\n        if (match) {\n          // Attempt to focus the first el\n          tabbable(root.current)[0].focus()\n        }\n        i = i + 1\n      } else {\n        // Clear interval after n attempts\n        clearInterval(timer)\n      }\n    }, 100)\n  }\n\n  useEffect(() => {\n    setTimeout(trapFocus, 20)\n    return () => {\n      returnFocus()\n    }\n  }, [root, children])\n\n  return React.createElement('div', {\n    ref: root,\n    children,\n    className: 'outline-none focus-trap',\n    tabIndex: -1,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}