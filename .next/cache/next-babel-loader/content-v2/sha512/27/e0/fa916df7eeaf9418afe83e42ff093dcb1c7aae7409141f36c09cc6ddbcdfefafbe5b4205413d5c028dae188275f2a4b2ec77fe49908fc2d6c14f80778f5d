{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useCallback } from 'react';\nimport { CommerceError } from '@commerce/utils/errors';\nimport useCustomer from '../customer/use-customer';\nimport createCustomerAccessTokenMutation from '../utils/mutations/customer-access-token-create';\nimport useLogin from '@commerce/auth/use-login';\nimport { setCustomerToken, throwUserErrors } from '../utils';\nexport default useLogin;\n\nvar getErrorMessage = function getErrorMessage(_ref) {\n  var code = _ref.code,\n      message = _ref.message;\n\n  switch (code) {\n    case 'UNIDENTIFIED_CUSTOMER':\n      message = 'Cannot find an account that matches the provided credentials';\n      break;\n  }\n\n  return message;\n};\n\nexport var handler = {\n  fetchOptions: {\n    query: createCustomerAccessTokenMutation\n  },\n  fetcher: function fetcher(_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _ref2$input, email, password, options, fetch, _yield$fetch, customerAccessTokenCreate, customerAccessToken, accessToken;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref2$input = _ref2.input, email = _ref2$input.email, password = _ref2$input.password, options = _ref2.options, fetch = _ref2.fetch;\n\n              if (email && password) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new CommerceError({\n                message: 'A first name, last name, email and password are required to login'\n              });\n\n            case 3:\n              _context.next = 5;\n              return fetch(_objectSpread(_objectSpread({}, options), {}, {\n                variables: {\n                  input: {\n                    email: email,\n                    password: password\n                  }\n                }\n              }));\n\n            case 5:\n              _yield$fetch = _context.sent;\n              customerAccessTokenCreate = _yield$fetch.customerAccessTokenCreate;\n              throwUserErrors(customerAccessTokenCreate === null || customerAccessTokenCreate === void 0 ? void 0 : customerAccessTokenCreate.customerUserErrors);\n              customerAccessToken = customerAccessTokenCreate === null || customerAccessTokenCreate === void 0 ? void 0 : customerAccessTokenCreate.customerAccessToken;\n              accessToken = customerAccessToken === null || customerAccessToken === void 0 ? void 0 : customerAccessToken.accessToken;\n\n              if (accessToken) {\n                setCustomerToken(accessToken);\n              }\n\n              return _context.abrupt(\"return\", null);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  useHook: function useHook(_ref3) {\n    var _s = $RefreshSig$();\n\n    var fetch = _ref3.fetch;\n    return _s(function () {\n      _s();\n\n      var _useCustomer = useCustomer(),\n          revalidate = _useCustomer.revalidate;\n\n      return useCallback( /*#__PURE__*/function () {\n        var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(input) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return fetch({\n                    input: input\n                  });\n\n                case 2:\n                  data = _context2.sent;\n                  _context2.next = 5;\n                  return revalidate();\n\n                case 5:\n                  return _context2.abrupt(\"return\", data);\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        function login(_x) {\n          return _login.apply(this, arguments);\n        }\n\n        return login;\n      }(), [fetch, revalidate]);\n    }, \"VbdFNpUpAafu4uJdlR1/SMv+v7U=\", false, function () {\n      return [useCustomer];\n    });\n  }\n};","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/auth/use-login.tsx"],"names":["useCallback","CommerceError","useCustomer","createCustomerAccessTokenMutation","useLogin","setCustomerToken","throwUserErrors","getErrorMessage","code","message","handler","fetchOptions","query","fetcher","input","email","password","options","fetch","variables","customerAccessTokenCreate","customerUserErrors","customerAccessToken","accessToken","useHook","revalidate","data","login"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,aAAT,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,iCAAP,MAA8C,iDAA9C;AAOA,OAAOC,QAAP,MAAmC,0BAAnC;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,UAAlD;AAEA,eAAeF,QAAf;;AAEA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,OAA0C;AAAA,MAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,MAAjCC,OAAiC,QAAjCA,OAAiC;;AAChE,UAAQD,IAAR;AACE,SAAK,uBAAL;AACEC,MAAAA,OAAO,GAAG,8DAAV;AACA;AAHJ;;AAKA,SAAOA,OAAP;AACD,CAPD;;AASA,OAAO,IAAMC,OAA+D,GAAG;AAC7EC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAET;AADK,GAD+D;AAIvEU,EAAAA,OAJuE,0BAIf;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA9CC,KAA8C,EAArCC,KAAqC,eAArCA,KAAqC,EAA9BC,QAA8B,eAA9BA,QAA8B,EAAlBC,OAAkB,SAAlBA,OAAkB,EAATC,KAAS,SAATA,KAAS;;AAAA,kBACtDH,KAAK,IAAIC,QAD6C;AAAA;AAAA;AAAA;;AAAA,oBAEpD,IAAIf,aAAJ,CAAkB;AACtBQ,gBAAAA,OAAO,EACL;AAFoB,eAAlB,CAFoD;;AAAA;AAAA;AAAA,qBAQhBS,KAAK,iCAI5CD,OAJ4C;AAK/CE,gBAAAA,SAAS,EAAE;AACTL,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,KAAK,EAALA,KAAF;AAASC,oBAAAA,QAAQ,EAARA;AAAT;AADE;AALoC,iBARW;;AAAA;AAAA;AAQpDI,cAAAA,yBARoD,gBAQpDA,yBARoD;AAkB5Dd,cAAAA,eAAe,CAACc,yBAAD,aAACA,yBAAD,uBAACA,yBAAyB,CAAEC,kBAA5B,CAAf;AAEMC,cAAAA,mBApBsD,GAoBhCF,yBApBgC,aAoBhCA,yBApBgC,uBAoBhCA,yBAAyB,CAAEE,mBApBK;AAqBtDC,cAAAA,WArBsD,GAqBxCD,mBArBwC,aAqBxCA,mBArBwC,uBAqBxCA,mBAAmB,CAAEC,WArBmB;;AAuB5D,kBAAIA,WAAJ,EAAiB;AACflB,gBAAAA,gBAAgB,CAACkB,WAAD,CAAhB;AACD;;AAzB2D,+CA2BrD,IA3BqD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4B7D,GAhC4E;AAiC7EC,EAAAA,OAAO,EAAE;AAAA;;AAAA,QAAGN,KAAH,SAAGA,KAAH;AAAA,cAAe,YAAM;AAAA;;AAAA,yBACLhB,WAAW,EADN;AAAA,UACpBuB,UADoB,gBACpBA,UADoB;;AAG5B,aAAOzB,WAAW;AAAA,8EAChB,kBAAqBc,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACqBI,KAAK,CAAC;AAAEJ,oBAAAA,KAAK,EAALA;AAAF,mBAAD,CAD1B;;AAAA;AACQY,kBAAAA,IADR;AAAA;AAAA,yBAEQD,UAAU,EAFlB;;AAAA;AAAA,oDAGSC,IAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADgB;;AAAA,iBACDC,KADC;AAAA;AAAA;;AAAA,eACDA,KADC;AAAA,WAMhB,CAACT,KAAD,EAAQO,UAAR,CANgB,CAAlB;AAQD,KAXQ;AAAA,cACgBvB,WADhB;AAAA;AAAA;AAjCoE,CAAxE","sourcesContent":["import { useCallback } from 'react'\nimport type { MutationHook } from '@commerce/utils/types'\nimport { CommerceError, ValidationError } from '@commerce/utils/errors'\nimport useCustomer from '../customer/use-customer'\nimport createCustomerAccessTokenMutation from '../utils/mutations/customer-access-token-create'\nimport {\n  CustomerAccessTokenCreateInput,\n  CustomerUserError,\n  Mutation,\n  MutationCheckoutCreateArgs,\n} from '../schema'\nimport useLogin, { UseLogin } from '@commerce/auth/use-login'\nimport { setCustomerToken, throwUserErrors } from '../utils'\n\nexport default useLogin as UseLogin<typeof handler>\n\nconst getErrorMessage = ({ code, message }: CustomerUserError) => {\n  switch (code) {\n    case 'UNIDENTIFIED_CUSTOMER':\n      message = 'Cannot find an account that matches the provided credentials'\n      break\n  }\n  return message\n}\n\nexport const handler: MutationHook<null, {}, CustomerAccessTokenCreateInput> = {\n  fetchOptions: {\n    query: createCustomerAccessTokenMutation,\n  },\n  async fetcher({ input: { email, password }, options, fetch }) {\n    if (!(email && password)) {\n      throw new CommerceError({\n        message:\n          'A first name, last name, email and password are required to login',\n      })\n    }\n\n    const { customerAccessTokenCreate } = await fetch<\n      Mutation,\n      MutationCheckoutCreateArgs\n    >({\n      ...options,\n      variables: {\n        input: { email, password },\n      },\n    })\n\n    throwUserErrors(customerAccessTokenCreate?.customerUserErrors)\n\n    const customerAccessToken = customerAccessTokenCreate?.customerAccessToken\n    const accessToken = customerAccessToken?.accessToken\n\n    if (accessToken) {\n      setCustomerToken(accessToken)\n    }\n\n    return null\n  },\n  useHook: ({ fetch }) => () => {\n    const { revalidate } = useCustomer()\n\n    return useCallback(\n      async function login(input) {\n        const data = await fetch({ input })\n        await revalidate()\n        return data\n      },\n      [fetch, revalidate]\n    )\n  },\n}\n"]},"metadata":{},"sourceType":"module"}