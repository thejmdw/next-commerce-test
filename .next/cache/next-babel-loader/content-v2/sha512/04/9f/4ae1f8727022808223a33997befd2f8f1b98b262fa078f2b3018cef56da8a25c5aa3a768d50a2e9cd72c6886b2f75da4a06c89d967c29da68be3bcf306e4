{"ast":null,"code":"import { useCallback } from 'react';\nimport { useCommerce } from '..';\nimport useData from './use-data';\nexport function useFetcher() {\n  var _providerRef$current$;\n\n  const {\n    providerRef,\n    fetcherRef\n  } = useCommerce();\n  return (_providerRef$current$ = providerRef.current.fetcher) !== null && _providerRef$current$ !== void 0 ? _providerRef$current$ : fetcherRef.current;\n}\nexport function useHook(fn) {\n  const {\n    providerRef\n  } = useCommerce();\n  const provider = providerRef.current;\n  return fn(provider);\n}\nexport function useSWRHook(hook) {\n  const fetcher = useFetcher();\n  return hook.useHook({\n    useData(ctx) {\n      var _ctx$input;\n\n      const response = useData(hook, (_ctx$input = ctx === null || ctx === void 0 ? void 0 : ctx.input) !== null && _ctx$input !== void 0 ? _ctx$input : [], fetcher, ctx === null || ctx === void 0 ? void 0 : ctx.swrOptions);\n      return response;\n    }\n\n  });\n}\nexport function useMutationHook(hook) {\n  const fetcher = useFetcher();\n  return hook.useHook({\n    fetch: useCallback(({\n      input\n    } = {}) => {\n      return hook.fetcher({\n        input,\n        options: hook.fetchOptions,\n        fetch: fetcher\n      });\n    }, [fetcher, hook.fetchOptions])\n  });\n}","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/commerce/utils/use-hook.ts"],"names":["useCallback","useCommerce","useData","useFetcher","providerRef","fetcherRef","current","fetcher","useHook","fn","provider","useSWRHook","hook","ctx","response","input","swrOptions","useMutationHook","fetch","options","fetchOptions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAAmBC,WAAnB,QAAsC,IAAtC;AAEA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA8BJ,WAAW,EAA/C;AACA,kCAAOG,WAAW,CAACE,OAAZ,CAAoBC,OAA3B,yEAAsCF,UAAU,CAACC,OAAjD;AACD;AAED,OAAO,SAASE,OAAT,CAGLC,EAHK,EAGmB;AACxB,QAAM;AAAEL,IAAAA;AAAF,MAAkBH,WAAW,EAAnC;AACA,QAAMS,QAAQ,GAAGN,WAAW,CAACE,OAA7B;AACA,SAAOG,EAAE,CAACC,QAAD,CAAT;AACD;AAED,OAAO,SAASC,UAAT,CACLC,IADK,EAEL;AACA,QAAML,OAAO,GAAGJ,UAAU,EAA1B;AAEA,SAAOS,IAAI,CAACJ,OAAL,CAAa;AAClBN,IAAAA,OAAO,CAACW,GAAD,EAAM;AAAA;;AACX,YAAMC,QAAQ,GAAGZ,OAAO,CAACU,IAAD,gBAAOC,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEE,KAAZ,mDAAqB,EAArB,EAAyBR,OAAzB,EAAkCM,GAAlC,aAAkCA,GAAlC,uBAAkCA,GAAG,CAAEG,UAAvC,CAAxB;AACA,aAAOF,QAAP;AACD;;AAJiB,GAAb,CAAP;AAMD;AAED,OAAO,SAASG,eAAT,CACLL,IADK,EAEL;AACA,QAAML,OAAO,GAAGJ,UAAU,EAA1B;AAEA,SAAOS,IAAI,CAACJ,OAAL,CAAa;AAClBU,IAAAA,KAAK,EAAElB,WAAW,CAChB,CAAC;AAAEe,MAAAA;AAAF,QAAY,EAAb,KAAoB;AAClB,aAAOH,IAAI,CAACL,OAAL,CAAa;AAClBQ,QAAAA,KADkB;AAElBI,QAAAA,OAAO,EAAEP,IAAI,CAACQ,YAFI;AAGlBF,QAAAA,KAAK,EAAEX;AAHW,OAAb,CAAP;AAKD,KAPe,EAQhB,CAACA,OAAD,EAAUK,IAAI,CAACQ,YAAf,CARgB;AADA,GAAb,CAAP;AAYD","sourcesContent":["import { useCallback } from 'react'\nimport { Provider, useCommerce } from '..'\nimport type { MutationHook, PickRequired, SWRHook } from './types'\nimport useData from './use-data'\n\nexport function useFetcher() {\n  const { providerRef, fetcherRef } = useCommerce()\n  return providerRef.current.fetcher ?? fetcherRef.current\n}\n\nexport function useHook<\n  P extends Provider,\n  H extends MutationHook<any, any, any> | SWRHook<any, any, any>\n>(fn: (provider: P) => H) {\n  const { providerRef } = useCommerce<P>()\n  const provider = providerRef.current\n  return fn(provider)\n}\n\nexport function useSWRHook<H extends SWRHook<any, any, any>>(\n  hook: PickRequired<H, 'fetcher'>\n) {\n  const fetcher = useFetcher()\n\n  return hook.useHook({\n    useData(ctx) {\n      const response = useData(hook, ctx?.input ?? [], fetcher, ctx?.swrOptions)\n      return response\n    },\n  })\n}\n\nexport function useMutationHook<H extends MutationHook<any, any, any>>(\n  hook: PickRequired<H, 'fetcher'>\n) {\n  const fetcher = useFetcher()\n\n  return hook.useHook({\n    fetch: useCallback(\n      ({ input } = {}) => {\n        return hook.fetcher({\n          input,\n          options: hook.fetchOptions,\n          fetch: fetcher,\n        })\n      },\n      [fetcher, hook.fetchOptions]\n    ),\n  })\n}\n"]},"metadata":{},"sourceType":"module"}