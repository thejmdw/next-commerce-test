{"ast":null,"code":"import { CommerceError } from '@commerce/utils/errors';\nimport { normalizeCart } from './normalize';\nimport throwUserErrors from './throw-user-errors';\n\nconst checkoutToCart = checkoutPayload => {\n  if (!checkoutPayload) {\n    throw new CommerceError({\n      message: 'Missing checkout payload from response'\n    });\n  }\n\n  const checkout = checkoutPayload === null || checkoutPayload === void 0 ? void 0 : checkoutPayload.checkout;\n  throwUserErrors(checkoutPayload === null || checkoutPayload === void 0 ? void 0 : checkoutPayload.checkoutUserErrors);\n\n  if (!checkout) {\n    throw new CommerceError({\n      message: 'Missing checkout object from response'\n    });\n  }\n\n  return normalizeCart(checkout);\n};\n\nexport default checkoutToCart;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/shopify/utils/checkout-to-cart.ts"],"names":["CommerceError","normalizeCart","throwUserErrors","checkoutToCart","checkoutPayload","message","checkout","checkoutUserErrors"],"mappings":"AACA,SAASA,aAAT,QAA8B,wBAA9B;AAYA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,eAAP,MAA4B,qBAA5B;;AAcA,MAAMC,cAAc,GAAIC,eAAD,IAAoD;AACzE,MAAI,CAACA,eAAL,EAAsB;AACpB,UAAM,IAAIJ,aAAJ,CAAkB;AACtBK,MAAAA,OAAO,EAAE;AADa,KAAlB,CAAN;AAGD;;AAED,QAAMC,QAAQ,GAAGF,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEE,QAAlC;AACAJ,EAAAA,eAAe,CAACE,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEG,kBAAlB,CAAf;;AAEA,MAAI,CAACD,QAAL,EAAe;AACb,UAAM,IAAIN,aAAJ,CAAkB;AACtBK,MAAAA,OAAO,EAAE;AADa,KAAlB,CAAN;AAGD;;AAED,SAAOJ,aAAa,CAACK,QAAD,CAApB;AACD,CAjBD;;AAmBA,eAAeH,cAAf","sourcesContent":["import { Cart } from '../types'\nimport { CommerceError } from '@commerce/utils/errors'\n\nimport {\n  CheckoutLineItemsAddPayload,\n  CheckoutLineItemsRemovePayload,\n  CheckoutLineItemsUpdatePayload,\n  CheckoutCreatePayload,\n  CheckoutUserError,\n  Checkout,\n  Maybe,\n} from '../schema'\n\nimport { normalizeCart } from './normalize'\nimport throwUserErrors from './throw-user-errors'\n\nexport type CheckoutQuery = {\n  checkout: Checkout\n  checkoutUserErrors?: Array<CheckoutUserError>\n}\n\nexport type CheckoutPayload =\n  | CheckoutLineItemsAddPayload\n  | CheckoutLineItemsUpdatePayload\n  | CheckoutLineItemsRemovePayload\n  | CheckoutCreatePayload\n  | CheckoutQuery\n\nconst checkoutToCart = (checkoutPayload?: Maybe<CheckoutPayload>): Cart => {\n  if (!checkoutPayload) {\n    throw new CommerceError({\n      message: 'Missing checkout payload from response',\n    })\n  }\n\n  const checkout = checkoutPayload?.checkout\n  throwUserErrors(checkoutPayload?.checkoutUserErrors)\n\n  if (!checkout) {\n    throw new CommerceError({\n      message: 'Missing checkout object from response',\n    })\n  }\n\n  return normalizeCart(checkout)\n}\n\nexport default checkoutToCart\n"]},"metadata":{},"sourceType":"module"}