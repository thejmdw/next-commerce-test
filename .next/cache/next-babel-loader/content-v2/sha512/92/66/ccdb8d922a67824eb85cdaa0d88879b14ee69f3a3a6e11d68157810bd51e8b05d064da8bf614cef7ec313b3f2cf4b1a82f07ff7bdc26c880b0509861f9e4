{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thejmdw/workspace/websites/next-commerce-test/components/ui/context.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useMemo } from 'react';\nimport { ThemeProvider } from 'next-themes';\nconst initialState = {\n  displaySidebar: false,\n  displayDropdown: false,\n  displayModal: false,\n  modalView: 'LOGIN_VIEW',\n  displayToast: false,\n  toastText: '',\n  userAvatar: ''\n};\nexport const UIContext = /*#__PURE__*/React.createContext(initialState);\nUIContext.displayName = 'UIContext';\n\nfunction uiReducer(state, action) {\n  switch (action.type) {\n    case 'OPEN_SIDEBAR':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          displaySidebar: true\n        });\n      }\n\n    case 'CLOSE_SIDEBAR':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          displaySidebar: false\n        });\n      }\n\n    case 'OPEN_DROPDOWN':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          displayDropdown: true\n        });\n      }\n\n    case 'CLOSE_DROPDOWN':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          displayDropdown: false\n        });\n      }\n\n    case 'OPEN_MODAL':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          displayModal: true,\n          displaySidebar: false\n        });\n      }\n\n    case 'CLOSE_MODAL':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          displayModal: false\n        });\n      }\n\n    case 'OPEN_TOAST':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          displayToast: true\n        });\n      }\n\n    case 'CLOSE_TOAST':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          displayToast: false\n        });\n      }\n\n    case 'SET_MODAL_VIEW':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          modalView: action.view\n        });\n      }\n\n    case 'SET_TOAST_TEXT':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          toastText: action.text\n        });\n      }\n\n    case 'SET_USER_AVATAR':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userAvatar: action.value\n        });\n      }\n  }\n}\n\nexport const UIProvider = props => {\n  const [state, dispatch] = React.useReducer(uiReducer, initialState);\n\n  const openSidebar = () => dispatch({\n    type: 'OPEN_SIDEBAR'\n  });\n\n  const closeSidebar = () => dispatch({\n    type: 'CLOSE_SIDEBAR'\n  });\n\n  const toggleSidebar = () => state.displaySidebar ? dispatch({\n    type: 'CLOSE_SIDEBAR'\n  }) : dispatch({\n    type: 'OPEN_SIDEBAR'\n  });\n\n  const closeSidebarIfPresent = () => state.displaySidebar && dispatch({\n    type: 'CLOSE_SIDEBAR'\n  });\n\n  const openDropdown = () => dispatch({\n    type: 'OPEN_DROPDOWN'\n  });\n\n  const closeDropdown = () => dispatch({\n    type: 'CLOSE_DROPDOWN'\n  });\n\n  const openModal = () => dispatch({\n    type: 'OPEN_MODAL'\n  });\n\n  const closeModal = () => dispatch({\n    type: 'CLOSE_MODAL'\n  });\n\n  const openToast = () => dispatch({\n    type: 'OPEN_TOAST'\n  });\n\n  const closeToast = () => dispatch({\n    type: 'CLOSE_TOAST'\n  });\n\n  const setUserAvatar = value => dispatch({\n    type: 'SET_USER_AVATAR',\n    value\n  });\n\n  const setModalView = view => dispatch({\n    type: 'SET_MODAL_VIEW',\n    view\n  });\n\n  const value = useMemo(() => _objectSpread(_objectSpread({}, state), {}, {\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    closeSidebarIfPresent,\n    openDropdown,\n    closeDropdown,\n    openModal,\n    closeModal,\n    setModalView,\n    openToast,\n    closeToast,\n    setUserAvatar\n  }), [state]);\n  return /*#__PURE__*/_jsxDEV(UIContext.Provider, _objectSpread({\n    value: value\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 10\n  }, this);\n};\nexport const useUI = () => {\n  const context = React.useContext(UIContext);\n\n  if (context === undefined) {\n    throw new Error(`useUI must be used within a UIProvider`);\n  }\n\n  return context;\n};\nexport const ManagedUIContext = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(UIProvider, {\n  children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 204,\n  columnNumber: 3\n}, this);","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/components/ui/context.tsx"],"names":["React","useMemo","ThemeProvider","initialState","displaySidebar","displayDropdown","displayModal","modalView","displayToast","toastText","userAvatar","UIContext","createContext","displayName","uiReducer","state","action","type","view","text","value","UIProvider","props","dispatch","useReducer","openSidebar","closeSidebar","toggleSidebar","closeSidebarIfPresent","openDropdown","closeDropdown","openModal","closeModal","openToast","closeToast","setUserAvatar","setModalView","useUI","context","useContext","undefined","Error","ManagedUIContext","children"],"mappings":"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","sourcesContent":["import React, { FC, useMemo } from 'react'\nimport { ThemeProvider } from 'next-themes'\n\nexport interface State {\n  displaySidebar: boolean\n  displayDropdown: boolean\n  displayModal: boolean\n  displayToast: boolean\n  modalView: string\n  toastText: string\n  userAvatar: string\n}\n\nconst initialState = {\n  displaySidebar: false,\n  displayDropdown: false,\n  displayModal: false,\n  modalView: 'LOGIN_VIEW',\n  displayToast: false,\n  toastText: '',\n  userAvatar: '',\n}\n\ntype Action =\n  | {\n      type: 'OPEN_SIDEBAR'\n    }\n  | {\n      type: 'CLOSE_SIDEBAR'\n    }\n  | {\n      type: 'OPEN_TOAST'\n    }\n  | {\n      type: 'CLOSE_TOAST'\n    }\n  | {\n      type: 'SET_TOAST_TEXT'\n      text: ToastText\n    }\n  | {\n      type: 'OPEN_DROPDOWN'\n    }\n  | {\n      type: 'CLOSE_DROPDOWN'\n    }\n  | {\n      type: 'OPEN_MODAL'\n    }\n  | {\n      type: 'CLOSE_MODAL'\n    }\n  | {\n      type: 'SET_MODAL_VIEW'\n      view: MODAL_VIEWS\n    }\n  | {\n      type: 'SET_USER_AVATAR'\n      value: string\n    }\n\ntype MODAL_VIEWS =\n  | 'SIGNUP_VIEW'\n  | 'LOGIN_VIEW'\n  | 'FORGOT_VIEW'\n  | 'NEW_SHIPPING_ADDRESS'\n  | 'NEW_PAYMENT_METHOD'\ntype ToastText = string\n\nexport const UIContext = React.createContext<State | any>(initialState)\n\nUIContext.displayName = 'UIContext'\n\nfunction uiReducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'OPEN_SIDEBAR': {\n      return {\n        ...state,\n        displaySidebar: true,\n      }\n    }\n    case 'CLOSE_SIDEBAR': {\n      return {\n        ...state,\n        displaySidebar: false,\n      }\n    }\n    case 'OPEN_DROPDOWN': {\n      return {\n        ...state,\n        displayDropdown: true,\n      }\n    }\n    case 'CLOSE_DROPDOWN': {\n      return {\n        ...state,\n        displayDropdown: false,\n      }\n    }\n    case 'OPEN_MODAL': {\n      return {\n        ...state,\n        displayModal: true,\n        displaySidebar: false,\n      }\n    }\n    case 'CLOSE_MODAL': {\n      return {\n        ...state,\n        displayModal: false,\n      }\n    }\n    case 'OPEN_TOAST': {\n      return {\n        ...state,\n        displayToast: true,\n      }\n    }\n    case 'CLOSE_TOAST': {\n      return {\n        ...state,\n        displayToast: false,\n      }\n    }\n    case 'SET_MODAL_VIEW': {\n      return {\n        ...state,\n        modalView: action.view,\n      }\n    }\n    case 'SET_TOAST_TEXT': {\n      return {\n        ...state,\n        toastText: action.text,\n      }\n    }\n    case 'SET_USER_AVATAR': {\n      return {\n        ...state,\n        userAvatar: action.value,\n      }\n    }\n  }\n}\n\nexport const UIProvider: FC = (props) => {\n  const [state, dispatch] = React.useReducer(uiReducer, initialState)\n\n  const openSidebar = () => dispatch({ type: 'OPEN_SIDEBAR' })\n  const closeSidebar = () => dispatch({ type: 'CLOSE_SIDEBAR' })\n  const toggleSidebar = () =>\n    state.displaySidebar\n      ? dispatch({ type: 'CLOSE_SIDEBAR' })\n      : dispatch({ type: 'OPEN_SIDEBAR' })\n  const closeSidebarIfPresent = () =>\n    state.displaySidebar && dispatch({ type: 'CLOSE_SIDEBAR' })\n\n  const openDropdown = () => dispatch({ type: 'OPEN_DROPDOWN' })\n  const closeDropdown = () => dispatch({ type: 'CLOSE_DROPDOWN' })\n\n  const openModal = () => dispatch({ type: 'OPEN_MODAL' })\n  const closeModal = () => dispatch({ type: 'CLOSE_MODAL' })\n\n  const openToast = () => dispatch({ type: 'OPEN_TOAST' })\n  const closeToast = () => dispatch({ type: 'CLOSE_TOAST' })\n\n  const setUserAvatar = (value: string) =>\n    dispatch({ type: 'SET_USER_AVATAR', value })\n\n  const setModalView = (view: MODAL_VIEWS) =>\n    dispatch({ type: 'SET_MODAL_VIEW', view })\n\n  const value = useMemo(\n    () => ({\n      ...state,\n      openSidebar,\n      closeSidebar,\n      toggleSidebar,\n      closeSidebarIfPresent,\n      openDropdown,\n      closeDropdown,\n      openModal,\n      closeModal,\n      setModalView,\n      openToast,\n      closeToast,\n      setUserAvatar,\n    }),\n    [state]\n  )\n\n  return <UIContext.Provider value={value} {...props} />\n}\n\nexport const useUI = () => {\n  const context = React.useContext(UIContext)\n  if (context === undefined) {\n    throw new Error(`useUI must be used within a UIProvider`)\n  }\n  return context\n}\n\nexport const ManagedUIContext: FC = ({ children }) => (\n  <UIProvider>\n    <ThemeProvider>{children}</ThemeProvider>\n  </UIProvider>\n)\n"]},"metadata":{},"sourceType":"module"}