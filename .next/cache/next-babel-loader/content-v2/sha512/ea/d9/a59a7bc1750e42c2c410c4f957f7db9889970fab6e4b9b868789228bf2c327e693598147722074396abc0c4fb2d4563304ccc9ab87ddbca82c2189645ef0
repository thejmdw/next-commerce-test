{"ast":null,"code":"import _defineProperty from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useHook, useSWRHook } from '../utils/use-hook';\nimport { SWRFetcher } from '../utils/default-fetcher';\nexport var fetcher = SWRFetcher;\n\nvar fn = function fn(provider) {\n  var _provider$customer;\n\n  return (_provider$customer = provider.customer) === null || _provider$customer === void 0 ? void 0 : _provider$customer.useCustomer;\n};\n\nvar useCustomer = function useCustomer(input) {\n  _s();\n\n  var hook = useHook(fn);\n  return useSWRHook(_objectSpread({\n    fetcher: fetcher\n  }, hook))(input);\n};\n\n_s(useCustomer, \"nSOn6U8frm+8N/vJ6An+PAP3QPw=\", false, function () {\n  return [useHook, useSWRHook];\n});\n\nexport default useCustomer;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/commerce/customer/use-customer.tsx"],"names":["useHook","useSWRHook","SWRFetcher","fetcher","fn","provider","customer","useCustomer","input","hook"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,mBAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AASA,OAAO,IAAMC,OAA4C,GAAGD,UAArD;;AAEP,IAAME,EAAE,GAAG,SAALA,EAAK,CAACC,QAAD;AAAA;;AAAA,+BAAwBA,QAAQ,CAACC,QAAjC,uDAAwB,mBAAmBC,WAA3C;AAAA,CAAX;;AAEA,IAAMA,WAAwB,GAAG,SAA3BA,WAA2B,CAACC,KAAD,EAAW;AAAA;;AAC1C,MAAMC,IAAI,GAAGT,OAAO,CAACI,EAAD,CAApB;AACA,SAAOH,UAAU;AAAGE,IAAAA,OAAO,EAAPA;AAAH,KAAeM,IAAf,EAAV,CAAiCD,KAAjC,CAAP;AACD,CAHD;;GAAMD,W;UACSP,O,EACNC,U;;;AAGT,eAAeM,WAAf","sourcesContent":["import { useHook, useSWRHook } from '../utils/use-hook'\nimport { SWRFetcher } from '../utils/default-fetcher'\nimport type { HookFetcherFn, SWRHook } from '../utils/types'\nimport type { Customer } from '../types'\nimport { Provider } from '..'\n\nexport type UseCustomer<\n  H extends SWRHook<any, any, any> = SWRHook<Customer | null>\n> = ReturnType<H['useHook']>\n\nexport const fetcher: HookFetcherFn<Customer | null, any> = SWRFetcher\n\nconst fn = (provider: Provider) => provider.customer?.useCustomer!\n\nconst useCustomer: UseCustomer = (input) => {\n  const hook = useHook(fn)\n  return useSWRHook({ fetcher, ...hook })(input)\n}\n\nexport default useCustomer\n"]},"metadata":{},"sourceType":"module"}