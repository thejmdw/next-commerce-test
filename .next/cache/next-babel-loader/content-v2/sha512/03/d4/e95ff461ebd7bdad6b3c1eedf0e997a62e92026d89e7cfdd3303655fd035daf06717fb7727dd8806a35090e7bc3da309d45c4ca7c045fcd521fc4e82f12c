{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useCommerce } from '..';\nexport function formatPrice(_ref) {\n  var amount = _ref.amount,\n      currencyCode = _ref.currencyCode,\n      locale = _ref.locale;\n  var formatCurrency = new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency: currencyCode\n  });\n  return formatCurrency.format(amount);\n}\nexport function formatVariantPrice(_ref2) {\n  var amount = _ref2.amount,\n      baseAmount = _ref2.baseAmount,\n      currencyCode = _ref2.currencyCode,\n      locale = _ref2.locale;\n  var hasDiscount = baseAmount > amount;\n  var formatDiscount = new Intl.NumberFormat(locale, {\n    style: 'percent'\n  });\n  var discount = hasDiscount ? formatDiscount.format((baseAmount - amount) / baseAmount) : null;\n  var price = formatPrice({\n    amount: amount,\n    currencyCode: currencyCode,\n    locale: locale\n  });\n  var basePrice = hasDiscount ? formatPrice({\n    amount: baseAmount,\n    currencyCode: currencyCode,\n    locale: locale\n  }) : null;\n  return {\n    price: price,\n    basePrice: basePrice,\n    discount: discount\n  };\n}\nexport default function usePrice(data) {\n  _s();\n\n  var _ref3 = data !== null && data !== void 0 ? data : {},\n      amount = _ref3.amount,\n      baseAmount = _ref3.baseAmount,\n      currencyCode = _ref3.currencyCode;\n\n  var _useCommerce = useCommerce(),\n      locale = _useCommerce.locale;\n\n  var value = useMemo(function () {\n    if (typeof amount !== 'number' || !currencyCode) return '';\n    return baseAmount ? formatVariantPrice({\n      amount: amount,\n      baseAmount: baseAmount,\n      currencyCode: currencyCode,\n      locale: locale\n    }) : formatPrice({\n      amount: amount,\n      currencyCode: currencyCode,\n      locale: locale\n    });\n  }, [amount, baseAmount, currencyCode]);\n  return typeof value === 'string' ? {\n    price: value\n  } : value;\n}\n\n_s(usePrice, \"Vy27AkA9WWyCCmILE7nTBhpUixs=\", false, function () {\n  return [useCommerce];\n});","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/commerce/product/use-price.tsx"],"names":["useMemo","useCommerce","formatPrice","amount","currencyCode","locale","formatCurrency","Intl","NumberFormat","style","currency","format","formatVariantPrice","baseAmount","hasDiscount","formatDiscount","discount","price","basePrice","usePrice","data","value"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,IAA5B;AAEA,OAAO,SAASC,WAAT,OAQJ;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDC,YAMC,QANDA,YAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AACD,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsBH,MAAtB,EAA8B;AACnDI,IAAAA,KAAK,EAAE,UAD4C;AAEnDC,IAAAA,QAAQ,EAAEN;AAFyC,GAA9B,CAAvB;AAKA,SAAOE,cAAc,CAACK,MAAf,CAAsBR,MAAtB,CAAP;AACD;AAED,OAAO,SAASS,kBAAT,QAUJ;AAAA,MATDT,MASC,SATDA,MASC;AAAA,MARDU,UAQC,SARDA,UAQC;AAAA,MAPDT,YAOC,SAPDA,YAOC;AAAA,MANDC,MAMC,SANDA,MAMC;AACD,MAAMS,WAAW,GAAGD,UAAU,GAAGV,MAAjC;AACA,MAAMY,cAAc,GAAG,IAAIR,IAAI,CAACC,YAAT,CAAsBH,MAAtB,EAA8B;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAA9B,CAAvB;AACA,MAAMO,QAAQ,GAAGF,WAAW,GACxBC,cAAc,CAACJ,MAAf,CAAsB,CAACE,UAAU,GAAGV,MAAd,IAAwBU,UAA9C,CADwB,GAExB,IAFJ;AAIA,MAAMI,KAAK,GAAGf,WAAW,CAAC;AAAEC,IAAAA,MAAM,EAANA,MAAF;AAAUC,IAAAA,YAAY,EAAZA,YAAV;AAAwBC,IAAAA,MAAM,EAANA;AAAxB,GAAD,CAAzB;AACA,MAAMa,SAAS,GAAGJ,WAAW,GACzBZ,WAAW,CAAC;AAAEC,IAAAA,MAAM,EAAEU,UAAV;AAAsBT,IAAAA,YAAY,EAAZA,YAAtB;AAAoCC,IAAAA,MAAM,EAANA;AAApC,GAAD,CADc,GAEzB,IAFJ;AAIA,SAAO;AAAEY,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,SAAS,EAATA,SAAT;AAAoBF,IAAAA,QAAQ,EAARA;AAApB,GAAP;AACD;AAED,eAAe,SAASG,QAAT,CACbC,IADa,EAMb;AAAA;;AAAA,cAC6CA,IAD7C,aAC6CA,IAD7C,cAC6CA,IAD7C,GACqD,EADrD;AAAA,MACQjB,MADR,SACQA,MADR;AAAA,MACgBU,UADhB,SACgBA,UADhB;AAAA,MAC4BT,YAD5B,SAC4BA,YAD5B;;AAAA,qBAEmBH,WAAW,EAF9B;AAAA,MAEQI,MAFR,gBAEQA,MAFR;;AAGA,MAAMgB,KAAK,GAAGrB,OAAO,CAAC,YAAM;AAC1B,QAAI,OAAOG,MAAP,KAAkB,QAAlB,IAA8B,CAACC,YAAnC,EAAiD,OAAO,EAAP;AAEjD,WAAOS,UAAU,GACbD,kBAAkB,CAAC;AAAET,MAAAA,MAAM,EAANA,MAAF;AAAUU,MAAAA,UAAU,EAAVA,UAAV;AAAsBT,MAAAA,YAAY,EAAZA,YAAtB;AAAoCC,MAAAA,MAAM,EAANA;AAApC,KAAD,CADL,GAEbH,WAAW,CAAC;AAAEC,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,YAAY,EAAZA,YAAV;AAAwBC,MAAAA,MAAM,EAANA;AAAxB,KAAD,CAFf;AAGD,GANoB,EAMlB,CAACF,MAAD,EAASU,UAAT,EAAqBT,YAArB,CANkB,CAArB;AAQA,SAAO,OAAOiB,KAAP,KAAiB,QAAjB,GAA4B;AAAEJ,IAAAA,KAAK,EAAEI;AAAT,GAA5B,GAA+CA,KAAtD;AACD;;GAlBuBF,Q;UAQHlB,W","sourcesContent":["import { useMemo } from 'react'\nimport { useCommerce } from '..'\n\nexport function formatPrice({\n  amount,\n  currencyCode,\n  locale,\n}: {\n  amount: number\n  currencyCode: string\n  locale: string\n}) {\n  const formatCurrency = new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency: currencyCode,\n  })\n\n  return formatCurrency.format(amount)\n}\n\nexport function formatVariantPrice({\n  amount,\n  baseAmount,\n  currencyCode,\n  locale,\n}: {\n  baseAmount: number\n  amount: number\n  currencyCode: string\n  locale: string\n}) {\n  const hasDiscount = baseAmount > amount\n  const formatDiscount = new Intl.NumberFormat(locale, { style: 'percent' })\n  const discount = hasDiscount\n    ? formatDiscount.format((baseAmount - amount) / baseAmount)\n    : null\n\n  const price = formatPrice({ amount, currencyCode, locale })\n  const basePrice = hasDiscount\n    ? formatPrice({ amount: baseAmount, currencyCode, locale })\n    : null\n\n  return { price, basePrice, discount }\n}\n\nexport default function usePrice(\n  data?: {\n    amount: number\n    baseAmount?: number\n    currencyCode: string\n  } | null\n) {\n  const { amount, baseAmount, currencyCode } = data ?? {}\n  const { locale } = useCommerce()\n  const value = useMemo(() => {\n    if (typeof amount !== 'number' || !currencyCode) return ''\n\n    return baseAmount\n      ? formatVariantPrice({ amount, baseAmount, currencyCode, locale })\n      : formatPrice({ amount, currencyCode, locale })\n  }, [amount, baseAmount, currencyCode])\n\n  return typeof value === 'string' ? { price: value } : value\n}\n"]},"metadata":{},"sourceType":"module"}