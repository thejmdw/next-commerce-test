{"ast":null,"code":"import _toConsumableArray from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thejmdw/workspace/websites/next-commerce-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useSWR from 'swr';\nimport defineProperty from './define-property';\nimport { CommerceError } from './errors';\n\nvar useData = function useData(options, input, fetcherFn, swrOptions) {\n  _s();\n\n  var hookInput = Array.isArray(input) ? input : Object.entries(input);\n\n  var fetcher = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, query, method) {\n      var _len,\n          args,\n          _key,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              for (_len = _args.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n                args[_key - 3] = _args[_key];\n              }\n\n              _context.next = 4;\n              return options.fetcher({\n                options: {\n                  url: url,\n                  query: query,\n                  method: method\n                },\n                // Transform the input array into an object\n                input: args.reduce(function (obj, val, i) {\n                  obj[hookInput[i][0]] = val;\n                  return obj;\n                }, {}),\n                fetch: fetcherFn\n              });\n\n            case 4:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n              // SWR will not log errors, but any error that's not an instance\n              // of CommerceError is not welcomed by this hook\n              if (!(_context.t0 instanceof CommerceError)) {\n                console.error(_context.t0);\n              }\n\n              throw _context.t0;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function fetcher(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var response = useSWR(function () {\n    var opts = options.fetchOptions;\n    return opts ? [opts.url, opts.query, opts.method].concat(_toConsumableArray(hookInput.map(function (e) {\n      return e[1];\n    }))) : null;\n  }, fetcher, swrOptions);\n\n  if (!('isLoading' in response)) {\n    defineProperty(response, 'isLoading', {\n      get: function get() {\n        return response.data === undefined;\n      },\n      enumerable: true\n    });\n  }\n\n  return response;\n};\n\n_s(useData, \"I6Ho1CJiU/r2HPZy4l9fyqhzpKk=\", false, function () {\n  return [useSWR];\n});\n\nexport default useData;","map":{"version":3,"sources":["/Users/thejmdw/workspace/websites/next-commerce-test/framework/commerce/utils/use-data.tsx"],"names":["useSWR","defineProperty","CommerceError","useData","options","input","fetcherFn","swrOptions","hookInput","Array","isArray","Object","entries","fetcher","url","query","method","args","reduce","obj","val","i","fetch","console","error","response","opts","fetchOptions","map","e","get","data","undefined","enumerable"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAA0C,KAA1C;AASA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,aAAT,QAA8B,UAA9B;;AAgBA,IAAMC,OAAgB,GAAG,SAAnBA,OAAmB,CAACC,OAAD,EAAUC,KAAV,EAAiBC,SAAjB,EAA4BC,UAA5B,EAA2C;AAAA;;AAClE,MAAMC,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcL,KAAd,IAAuBA,KAAvB,GAA+BM,MAAM,CAACC,OAAP,CAAeP,KAAf,CAAjD;;AACA,MAAMQ,OAAO;AAAA,wEAAG,iBACdC,GADc,EAEdC,KAFc,EAGdC,MAHc;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,wCAIXC,IAJW;AAIXA,gBAAAA,IAJW;AAAA;;AAAA;AAAA,qBAOCb,OAAO,CAACS,OAAR,CAAgB;AAC3BT,gBAAAA,OAAO,EAAE;AAAEU,kBAAAA,GAAG,EAAHA,GAAF;AAAOC,kBAAAA,KAAK,EAALA,KAAP;AAAcC,kBAAAA,MAAM,EAANA;AAAd,iBADkB;AAE3B;AACAX,gBAAAA,KAAK,EAAEY,IAAI,CAACC,MAAL,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAWC,CAAX,EAAiB;AAClCF,kBAAAA,GAAG,CAACX,SAAS,CAACa,CAAD,CAAT,CAAa,CAAb,CAAD,CAAH,GAAwBD,GAAxB;AACA,yBAAOD,GAAP;AACD,iBAHM,EAGJ,EAHI,CAHoB;AAO3BG,gBAAAA,KAAK,EAAEhB;AAPoB,eAAhB,CAPD;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAiBZ;AACA;AACA,kBAAI,EAAE,uBAAiBJ,aAAnB,CAAJ,EAAuC;AACrCqB,gBAAAA,OAAO,CAACC,KAAR;AACD;;AArBW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPX,OAAO;AAAA;AAAA;AAAA,KAAb;;AAyBA,MAAMY,QAAQ,GAAGzB,MAAM,CACrB,YAAM;AACJ,QAAM0B,IAAI,GAAGtB,OAAO,CAACuB,YAArB;AACA,WAAOD,IAAI,IACNA,IAAI,CAACZ,GADC,EACIY,IAAI,CAACX,KADT,EACgBW,IAAI,CAACV,MADrB,4BACgCR,SAAS,CAACoB,GAAV,CAAc,UAACC,CAAD;AAAA,aAAOA,CAAC,CAAC,CAAD,CAAR;AAAA,KAAd,CADhC,KAEP,IAFJ;AAGD,GANoB,EAOrBhB,OAPqB,EAQrBN,UARqB,CAAvB;;AAWA,MAAI,EAAE,eAAekB,QAAjB,CAAJ,EAAgC;AAC9BxB,IAAAA,cAAc,CAACwB,QAAD,EAAW,WAAX,EAAwB;AACpCK,MAAAA,GADoC,iBAC9B;AACJ,eAAOL,QAAQ,CAACM,IAAT,KAAkBC,SAAzB;AACD,OAHmC;AAIpCC,MAAAA,UAAU,EAAE;AAJwB,KAAxB,CAAd;AAMD;;AAED,SAAOR,QAAP;AACD,CAhDD;;GAAMtB,O;UA2BaH,M;;;AAuBnB,eAAeG,OAAf","sourcesContent":["import useSWR, { responseInterface } from 'swr'\nimport type {\n  HookSWRInput,\n  HookFetchInput,\n  Fetcher,\n  SwrOptions,\n  HookFetcherOptions,\n  HookFetcherFn,\n} from './types'\nimport defineProperty from './define-property'\nimport { CommerceError } from './errors'\n\nexport type ResponseState<Result> = responseInterface<Result, CommerceError> & {\n  isLoading: boolean\n}\n\nexport type UseData = <Data = any, FetchInput extends HookFetchInput = {}>(\n  options: {\n    fetchOptions: HookFetcherOptions\n    fetcher: HookFetcherFn<Data, FetchInput>\n  },\n  input: HookFetchInput | HookSWRInput,\n  fetcherFn: Fetcher,\n  swrOptions?: SwrOptions<Data, FetchInput>\n) => ResponseState<Data>\n\nconst useData: UseData = (options, input, fetcherFn, swrOptions) => {\n  const hookInput = Array.isArray(input) ? input : Object.entries(input)\n  const fetcher = async (\n    url: string,\n    query?: string,\n    method?: string,\n    ...args: any[]\n  ) => {\n    try {\n      return await options.fetcher({\n        options: { url, query, method },\n        // Transform the input array into an object\n        input: args.reduce((obj, val, i) => {\n          obj[hookInput[i][0]!] = val\n          return obj\n        }, {}),\n        fetch: fetcherFn,\n      })\n    } catch (error) {\n      // SWR will not log errors, but any error that's not an instance\n      // of CommerceError is not welcomed by this hook\n      if (!(error instanceof CommerceError)) {\n        console.error(error)\n      }\n      throw error\n    }\n  }\n  const response = useSWR(\n    () => {\n      const opts = options.fetchOptions\n      return opts\n        ? [opts.url, opts.query, opts.method, ...hookInput.map((e) => e[1])]\n        : null\n    },\n    fetcher,\n    swrOptions\n  )\n\n  if (!('isLoading' in response)) {\n    defineProperty(response, 'isLoading', {\n      get() {\n        return response.data === undefined\n      },\n      enumerable: true,\n    })\n  }\n\n  return response\n}\n\nexport default useData\n"]},"metadata":{},"sourceType":"module"}